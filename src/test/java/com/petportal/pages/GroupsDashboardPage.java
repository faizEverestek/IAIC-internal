package com.petportal.pages;

import com.petportal.base.web.WebPage;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.petportal.base.web.AbstractPage;

@WebPage
public class GroupsDashboardPage implements AbstractPage {

    private static final Map<String, WebElement> WEB_ELEMENT_MAPPING = new HashMap<>();
    @FindBy(xpath = "//a[@aria-label='Groups']") private WebElement groupLink;
    @FindBy(xpath = "//a[@aria-label='Claims']") private WebElement claimsLink;
    @FindBy(xpath = "//a[@aria-label='Vet Helpline/Pet Meds']") private WebElement helpline;
    @FindBy(xpath = "//a[@aria-label='Contact Us']") private WebElement contactUs;
    @FindBy(xpath = "//a[@aria-label='Life Events']") private WebElement lifeEvents;
    @FindBy(xpath = "//a[@aria-label='Create Group']") private WebElement createGroup;
    @FindBy(xpath = "//h2[text()='Group Configuration']") private WebElement createGroupHeader;
    @FindBy(xpath = "//button[@aria-label='Promote']") private WebElement promoteButton;
    @FindBy(xpath = "//input[@aria-label='Role']") private WebElement promoteEmployeeDropDown;
    @FindBy(xpath = "//*[text()='Ben Broker']") private WebElement selectBenBroker;
    @FindBy(xpath = "//*[text()='Admin']") private WebElement selectAdmin;
    @FindBy(xpath = "//*[text()='Citadel']") private WebElement selectCitadel;
    @FindBy(xpath = "//input[@aria-label='Role']") private WebElement producerDropDown;
    @FindBy(xpath = "//input[@id='subProducerCode']") private WebElement subProducerCode;
    @FindBy(xpath = "//button[@type='submit']//*[text()='Promote']") private WebElement promote1;
    @FindBy(xpath = "//button[@aria-label='Remove As Group Admin']") private WebElement removeGroupAdmin;
    @FindBy(xpath = "(//div[text()='Remove As Group Admin'])[2]") private WebElement removeGroupAdminButton;
    @FindBy(xpath = "//a[text()='Update Primary Email']") private WebElement updatePrimaryEmail;
    @FindBy(xpath = "//input[@aria-label='Primary Email']") private WebElement primaryEmail;
    @FindBy(xpath = "//button[@aria-label='Export Status']") private WebElement exportBtn;
    @FindBy(xpath = "//input[@aria-label='Report Type']") private WebElement reportType;
    @FindBy(xpath = "//div[text()='Ineligible Pet Report']") private WebElement ineligiblePetReport;
    @FindBy(xpath = "//div[text()='Submit']") private WebElement submitBtn;
    @FindBy(xpath = "//div[text()='Report Exported Successfully']") private WebElement exportedSuccessfully;
    @FindBy(xpath = "//div[text()='Missing Pet Demographics Report']") private WebElement missingPetDemographicsReport;
    @FindBy(xpath = "//a[@aria-label='Ben Admin']") private WebElement benAdminLink;
    @FindBy(xpath = "//a[@aria-label='Create Ben Admin']") private WebElement createBenAdmin;
    @FindBy(xpath = "//input[@id='postEnrollment']") private WebElement postEnrollmentCheckbox;
    @FindBy(xpath = "//label[@for='groupType']/following-sibling::div[1]") private WebElement groupType;
    @FindBy(xpath = "//*[text()='IAIC Administered']") private WebElement selectGroupType;
    @FindBy(xpath = "//*[text()='Ben Admin Administered']") private WebElement selectGroupTypeBA;
    @FindBy(xpath = "//label[@for='benAdminId']/following-sibling::div[1]") private WebElement groupBenAdmin;
    @FindBy(xpath = "(//input[@aria-autocomplete='list'])[2]") private WebElement listGroupBenAdmin;
    @FindBy(xpath = "//*[text()='Automation PDBA (Post Enrollment Included)']") private WebElement selectBenAdmin;
    @FindBy(xpath = "//label[@for='mga']/following-sibling::div[1]") private WebElement groupMGA;
    @FindBy(xpath = "//*[text()='Pet Partner']") private WebElement selectGroupMGAPet;
    @FindBy(xpath = "//*[text()='FIGO']") private WebElement selectGroupMGAFigo;
    @FindBy(xpath = "//input[@aria-label='Federal Number']") private WebElement federalNumber;
    @FindBy(xpath = "//label[@for='companyCode']/following-sibling::div[1]") private WebElement companyCode;
    @FindBy(xpath = "//label[@for='payrollDeductionReportLevel']/following-sibling::div[1]") private WebElement payrollDeductionReportLevel;
    @FindBy(xpath = "//*[text()='US']") private WebElement selectCompanyCode;
    @FindBy(xpath = "//*[text()='Pet']") private WebElement selectpayrollDeductionReportLevel;
    @FindBy(xpath = "//input[@id='agencyCode']") private WebElement agencyCode;
    @FindBy(xpath = "//input[@id='sicCode']") private WebElement sicCode;
    @FindBy(xpath = "//input[@id='groupNumber']") private WebElement mgaGroupNumber;
    @FindBy(xpath = "//input[@id='groupName']") private WebElement companyName;
    @FindBy(xpath = "//input[@aria-label='Location Name']") private WebElement locationName;
    @FindBy(xpath = "//input[@aria-label='Address Line 1']") private WebElement addressLine1;
    @FindBy(xpath = "//input[@aria-label='City']") private WebElement city;
    @FindBy(xpath = "//label[@for='locations[0].address.state']/following-sibling::div[1]") private WebElement state;
    @FindBy(xpath = "//*[text()='Alaska' or text()='Alberta']") private WebElement selectState;
    @FindBy(xpath = "//input[@id='locations[0].address.zipcode']") private WebElement zipcode;
    @FindBy(xpath = "//input[@id='zipCode']") private WebElement zipcode2;
    @FindBy(xpath = "//label[@for='locations[0].contact.contactType']/following-sibling::div[1]") private WebElement contactType;
    @FindBy(xpath = "//*[text()='Home']") private WebElement selectContactType;
    @FindBy(xpath = "//input[@aria-label='Contact Number']") private WebElement contactNumber;
    @FindBy(xpath = "//label[@for='newHireWaitingPeriod']/following-sibling::div[1]") private WebElement newHireWaitingPeriod;
    @FindBy(xpath = "//*[text()='N/A']") private WebElement selectnewWaitingPeriod;
    @FindBy(xpath = "//input[@id='isFirstFollowingWaitingPeriod']") private WebElement firstOfMonthWaitingPeriod;
    @FindBy(xpath = "//input[@id='enrollmentPeriod']") private WebElement enrollmentPeriod;
    @FindBy(xpath = "//label[@for='adminContactType']/following-sibling::div") private WebElement contactType1;
    @FindBy(xpath = "//*[text()='Add New Admin']") private WebElement selectContactType1;
    @FindBy(xpath = "//input[@id='firstName']") private WebElement firstName;
    @FindBy(xpath = "//input[@id='user.firstName']") private WebElement userFirstName;
    @FindBy(xpath = "//input[@id='lastName']") private WebElement lastName;
    @FindBy(xpath = "//input[@id='email']") private WebElement email;
    @FindBy(xpath = "//label[@for='contactType']/following-sibling::div[1]") private WebElement phoneType;
    @FindBy(xpath = "//input[@id='phoneNumber']") private WebElement phoneNumber;
    @FindBy(xpath = "//*[text()='Home']") private WebElement selectPhoneType;
    @FindBy(xpath = "//div[text()='Create Admin']") private WebElement createAdmin;
    @FindBy(xpath = "//h3[text()='Administrators Info:']") private WebElement adminResult;
    @FindBy(xpath = "//div[text()='Next']") private WebElement nextButton;
    @FindBy(xpath = "//*[text()='Producer Configuration']") private WebElement producerConfiguration;
    @FindBy(xpath = "//*[@class='Snackbar_snackbar__text__1Hx2a']") private WebElement snackBar;
    @FindBy(xpath = "//input[@id='billingInfo.addressLine1']") private WebElement billingAddress1;
    @FindBy(xpath = "//input[@id='billingInfo.city']") private WebElement billingCity;
    @FindBy(xpath = "//label[@for='billingInfo.state']/following-sibling::div[1]") private WebElement billingState;
    @FindBy(xpath = "//input[@id='billingInfo.zipcode']") private WebElement billingZipCode;
    @FindBy(xpath = "//input[@id='accountName']") private WebElement accountName;
    @FindBy(xpath = "//label[@for='accountType']/following-sibling::div[1]") private WebElement paymentMethod;
    @FindBy(xpath = "//*[text()='ACH Manual' or text()='EFT']") private WebElement selectPaymentMethod;
    @FindBy(xpath = "//label[@for='billingType']/following-sibling::div[1]") private WebElement billingType;
    @FindBy(xpath = "//*[text()='Pay In Advance']") private WebElement selectPayInAdvance;
    @FindBy(xpath = "//*[text()='Pay In Arrears']") private WebElement selectPayInArrears;
    @FindBy(xpath = "//*[text()='Pay In Advance']") private WebElement selectBillingType;
    @FindBy(xpath = "//label[@for='billingCycle']/following-sibling::div[1]") private WebElement billingCycle;
    @FindBy(xpath = "//*[text()='12']") private WebElement selectBillingCycle;
    @FindBy(xpath = "//label[@for='payrollFrequency']/following-sibling::div[1]") private WebElement payrollFrequency;
    @FindBy(xpath = "(//*[text()='12'])[2]") private WebElement selectPayrollFrequency;
    @FindBy(xpath = "//input[@aria-label='Date']") private WebElement waitForDate;
    @FindBy(xpath = "//input[@aria-label='Date']") private WebElement firstPayrollStartDate;
    @FindBy(xpath = "//input[@id='billDaysPriorToPayroll']") private WebElement billDaysPriorToPayroll;
    @FindBy(xpath = "//div[text()='Generate Payroll Cycle']") private WebElement generatePayrollBtn;
    @FindBy(xpath = "//div[text()='Hide Payroll Cycle']") private WebElement hidePayrollBtn;
    @FindBy(xpath = "//button[@type='submit']") private WebElement submitButton;
    @FindBy(xpath = "//th[text()='Payroll Cycle']") private WebElement payrollCycleText;
    @FindBy(xpath = "//h2[text()='Groups Dashboard']") private WebElement groupDashboard;
    @FindBy(xpath = "//button[contains(@class,'DropdownMenu')]") private WebElement groupsDropdown;
    @FindBy(xpath = "//*[text()='All Groups']") private WebElement selectAllGroups;
    @FindBy(xpath = "//input[@aria-label='Month']") private WebElement dateInput_Month;
    @FindBy(xpath = "//input[@aria-label='Day']") private WebElement dateInput_Day;
    @FindBy(xpath = "//input[@aria-label='Year']") private WebElement dateInput_year;
    @FindBy(xpath = "//button[@aria-label='Toggle calendar']") private WebElement calendarBtn;
    @FindBy(xpath = "(//button[contains(@class,'tile--now')]/following-sibling::button[1])[2]") private WebElement firstCoverageStartDate;
    @FindBy(xpath = "//button[contains(@class,'next-button')]") private WebElement calendarMonthChange;
    @FindBy(xpath = "//button[@class='react-calendar__navigation__label']") private WebElement calendarYearChange;
    @FindBy(xpath = "//button[text()='2024']") private WebElement selectNewYear2023;
    @FindBy(xpath = "//button[text()='2025']") private WebElement selectCurrentYear;
    @FindBy(xpath = "//button[text()='2026']") private WebElement selectNewYear2025;
    @FindBy(xpath = "(//abbr[text()='January'])[1]") private WebElement selectJanuary;
    @FindBy(xpath = "(//abbr[@aria-label='January 1, 2025'])[1]") private WebElement selectFirstJanuary;
    @FindBy(xpath = "(//abbr[@aria-label='January 1, 2025'])[2]") private WebElement selectFirstJanuary2;
    @FindBy(xpath = "(//abbr[@aria-label='January 1, 2025'])[3]") private WebElement selectFirstJanuary3;
    @FindBy(xpath = "(//abbr[text()='February'])[1]") private WebElement selectFeb;
    @FindBy(xpath = "(//*[text()='11'])[1]") private WebElement select11January;
    @FindBy(xpath = "(//*[text()='10'])[1]") private WebElement select9Feb;
    @FindBy(xpath = "(//abbr[@aria-label='January 2025'])[1]") private WebElement selectJanuary2025;
    @FindBy(xpath = "(//button[@class='react-calendar__navigation__label'])[2]") private WebElement calendarYearChange2;
    @FindBy(xpath = "(//button[@class='react-calendar__navigation__label'])[3]") private WebElement calendarYearChange3;
    @FindBy(xpath = "//button[contains(@class,'tile--now')]/following-sibling::button[1]") private WebElement tomorrowDatePicker;
    @FindBy(xpath = "//div[@aria-label='Group Name']/div[@color='primaryDark']") private WebElement groupName;
    @FindBy(xpath = "//div[@aria-label='Federal Number']/div[@color='primaryDark']") private WebElement federalNumber1;
    @FindBy(xpath = "//button[@aria-label='View / Hide Filters']") private WebElement filterButton;
    @FindBy(xpath = "//input[@id='groupName']") private WebElement searchGroupName;
    @FindBy(xpath = "//input[@id='email']") private WebElement searchEmail;
    @FindBy(xpath = "(//div[contains(text(),'@automation.com')])[1]") private WebElement verifyEmail;
    @FindBy(xpath = "//input[@id='firstName']") private WebElement searchFirstName;
    @FindBy(xpath = "//input[@id='empId']") private WebElement searchEmpid;
    @FindBy(xpath = "//a[@aria-label='Activate']") private WebElement activateGroup;
    @FindBy(xpath = "//input[@id='eligibilityClassName']") private WebElement className;
    @FindBy(xpath = "//label[@for='driverValue[0].name']/following-sibling::div") private WebElement chooseDriver;
    @FindBy(xpath = "//*[text()='Job title']") private WebElement selectDriver;
    @FindBy(xpath = "//input[@id='driverValue[0].jobTitle_FIELD']") private WebElement jobTitleValue;
    @FindBy(xpath = "//div[text()='Create Eligibility Class']") private WebElement addDriverBtn;
    @FindBy(xpath = "//div[text()='Add Plan']") private WebElement addPlan;
    @FindBy(xpath = "//input[@id='planName_0']") private WebElement planName;
    @FindBy(xpath = "//input[@id='planName_1']") private WebElement planNameG;
    @FindBy(xpath = "//label[@for='productId_0']/following-sibling::div") private WebElement product;
    @FindBy(xpath = "//label[@for='productId_1']/following-sibling::div") private WebElement productG;
    @FindBy(xpath = "//*[text()='Accident Only']") private WebElement selectProduct;
    @FindBy(xpath = "//*[text()='Accident & Illness']") private WebElement selectProductIllness;
    @FindBy(xpath = "//label[@for='annualLimit_0']/following-sibling::div") private WebElement annualLimit;
    @FindBy(xpath = "//label[@for='annualLimit_1']/following-sibling::div") private WebElement annualLimitG;
    @FindBy(xpath = "//*[text()='$500']") private WebElement selectAnnualLimit;
    @FindBy(xpath = "//*[text()='$1000']") private WebElement selectAnnualLimitG;
    @FindBy(xpath = "//input[@aria-label='Diminishing Deductible']") private WebElement diminishingDeductible;
    @FindBy(xpath = "//*[text()='$25']") private WebElement selectDiminishingDeductible;
    @FindBy(xpath = "//label[@for='annualDeductible_0']/following-sibling::div") private WebElement annualDeductible;
    @FindBy(xpath = "//label[@for='annualDeductible_1']/following-sibling::div") private WebElement annualDeductibleG;
    @FindBy(xpath = "//*[text()='$50']") private WebElement selectAnnualDeductible;
    @FindBy(xpath = "//*[text()='$200']") private WebElement selectAnnualDeductibleG;
    @FindBy(xpath = "//label[@for='coinsurance_0']/following-sibling::div") private WebElement coinsurance;
    @FindBy(xpath = "//label[@for='coinsurance_1']/following-sibling::div") private WebElement coinsuranceG;
    @FindBy(xpath = "//*[text()='50%']") private WebElement selectCoInsurance;
    @FindBy(xpath = "//*[text()='70%']") private WebElement selectCoInsuranceG;
    @FindBy(xpath = "//input[@aria-label='Per Incident Copay']") private WebElement perIncidentCopay;
    @FindBy(xpath = "(//*[text()='Not Included'])[6]") private WebElement selectPerIncidentCopay;
    @FindBy(xpath = "//input[@aria-label='Wellness']") private WebElement wellness;
    @FindBy(xpath = "(//*[text()='Not Included'])[7]") private WebElement selectWellness;
    @FindBy(xpath = "//label[@for='riderRPT_0']/following-sibling::div") private WebElement therapy;
    @FindBy(xpath = "//label[@for='riderRPT_1']/following-sibling::div") private WebElement therapyG;
    @FindBy(xpath = "//*[text()='Not Included']") private WebElement notIncluded;
    @FindBy(xpath = "(//*[text()='Not Included'])[8]") private WebElement notIncludedG;
    @FindBy(xpath = "//*[text()='Included']") private WebElement included;
    @FindBy(xpath = "//label[@for='riderOETC_0']/following-sibling::div") private WebElement consultant;
    @FindBy(xpath = "(//*[text()='Not Included'])[2]") private WebElement selectConsultant;
    @FindBy(xpath = "//label[@for='riderOETC_1']/following-sibling::div") private WebElement consultantG;
    @FindBy(xpath = "(//*[text()='Not Included'])[9]") private WebElement selectConsultantG;
    @FindBy(xpath = "//label[@for='riderAC_0']/following-sibling::div") private WebElement alternateCare;
    @FindBy(xpath = "(//*[text()='Not Included'])[3]") private WebElement selectAlternateCare;
    @FindBy(xpath = "//input[@aria-label='Alternative and Behavioral Care']") private WebElement alternateBehavioralCare;
    @FindBy(xpath = "(//*[text()='Not Included'])[10]") private WebElement selectAlternateBehavioralCare;
    @FindBy(xpath = "//label[@for='riderFR_0']/following-sibling::div") private WebElement finalRespect;
    @FindBy(xpath = "(//*[text()='Not Included'])[4]") private WebElement selectFinalRespect;
    @FindBy(xpath = "//label[@for='riderFR_1']/following-sibling::div") private WebElement finalRespectG;
    @FindBy(xpath = "(//*[text()='Not Included'])[11]") private WebElement selectFinalRespectG;
    @FindBy(xpath = "//label[@for='riderRD_0']/following-sibling::div") private WebElement dental;
    @FindBy(xpath = "//*[text()='$100']") private WebElement selectDental;
    @FindBy(xpath = "//label[@for='riderRD_1']/following-sibling::div") private WebElement dentalG;
    @FindBy(xpath = "(//*[text()='$100'])[2]") private WebElement selectDentalG;
    @FindBy(xpath = "//label[@for='poa_0']/following-sibling::div") private WebElement assistance;
    @FindBy(xpath = "(//*[text()='Not Included'])[5]") private WebElement selectAssistant;
    @FindBy(xpath = "//label[@for='poa_1']/following-sibling::div") private WebElement assistanceG;
    @FindBy(xpath = "(//*[text()='Not Included'])[12]") private WebElement selectAssistantG;
    @FindBy(xpath = "//label[@for='bwpInjuries_0']/following-sibling::div") private WebElement injuries;
    @FindBy(xpath = "//*[text()='Waived']") private WebElement selectInjuries;
    @FindBy(xpath = "//label[@for='bwpInjuries_1']/following-sibling::div") private WebElement injuriesG;
    @FindBy(xpath = "(//*[text()='Waived'])[2]") private WebElement selectInjuriesG;
    @FindBy(xpath = "//input[@aria-label='Inherited and Congenital Care']") private WebElement inheritedCongenitalCare;
    @FindBy(xpath = "(//*[text()='Not Included'])[13]") private WebElement selectInheritedCongenitalCare;
    @FindBy(xpath = "//input[@aria-label='Benefit Waiting Period: Illness']") private WebElement waitingPeriodIllness;
    @FindBy(xpath = "(//*[text()='Waived'])[3]") private WebElement selectWaitingPeriodIllness;
    @FindBy(xpath = "//label[@for='existingCondition_0']/following-sibling::div") private WebElement existingCondition;
    @FindBy(xpath = "//*[contains(text(),'6 months look back')]") private WebElement selectExistingCondition;
    @FindBy(xpath = "//label[@for='existingCondition_1']/following-sibling::div") private WebElement existingConditionG;
    @FindBy(xpath = "(//*[contains(text(),'6 months look back')])[2]") private WebElement selectExistingConditionG;
    @FindBy(xpath = "//input[@aria-label='Maximum Issue Age of Pet at Effective Date']") private WebElement maximumIssueAge;
    @FindBy(xpath = "//*[text()='10 years']") private WebElement selectMaximumIssueAge;
    @FindBy(xpath = "//input[@aria-label='Prior Coverage Credit']") private WebElement priorCoverageCredit;
    @FindBy(xpath = "(//*[text()='Not Included'])[14]") private WebElement selectPriorCoverageCredit;
    @FindBy(xpath = "//input[@id='weightLimitA_0']") private WebElement weightAvalue;
    @FindBy(xpath = "//input[@id='weightLimitB_0']") private WebElement weightBvalue;
    @FindBy(xpath = "//input[@id='weightLimitC_0']") private WebElement weightCvalue;
    @FindBy(xpath = "//input[@id='weightLimitA_1']") private WebElement weightAvalueG;
    @FindBy(xpath = "//input[@id='weightLimitB_1']") private WebElement weightBvalueG;
    @FindBy(xpath = "//input[@id='weightLimitC_1']") private WebElement weightCvalueG;
    @FindBy(xpath = "//button[@aria-label='Add Employee']") private WebElement addEmployee;
    @FindBy(xpath = "//input[@aria-label='Employee Census Type']") private WebElement employeeCensusType;
    @FindBy(xpath = "//*[text()='Manual Input']") private WebElement selectManualInput;
    @FindBy(xpath = "//*[text()='Group Template File Upload']") private WebElement selectGroupTemplateFileUpload;
    @FindBy(xpath = "//*[text()='Enrollment File Upload']") private WebElement selectEnrollmentUpload;
    @FindBy(xpath = "//input[@id='empId']") private WebElement empId;
    @FindBy(xpath = "//label[@for='address.state']/following-sibling::div[1]") private WebElement stateAddEmployee;
    @FindBy(xpath = "//input[@id='address.zipcode']") private WebElement zipcodeAddEmployee;
    @FindBy(xpath = "//label[@for='locationName']/following-sibling::div") private WebElement officeLocation;
    @FindBy(xpath = "//label[@for='dateOfHire']/following-sibling::div//button[@aria-label='Toggle calendar']") private WebElement dateOfHire;
    @FindBy(xpath = "//label[@for='employmentStatus']/following-sibling::div") private WebElement employeeStatus;
    @FindBy(xpath = "//*[text()='Active']") private WebElement selectEmployeeStatus;
    @FindBy(xpath = "//button[@aria-label='Create Employee']") private WebElement createEmployeeBtn;
    @FindBy(xpath = "//div[text()='Enrollment Status']/following-sibling::div") private WebElement enrollmentStatus;
    @FindBy(xpath = "//button[@aria-label='Refresh Data']") private WebElement refreshBtn;
    @FindBy(xpath = "//div[text()='Incorrect Columns']") private WebElement fileStatus;
    @FindBy(xpath = "//a[@aria-label='Enroll']") private WebElement addEnrollmentBtn;
    @FindBy(xpath = "//div[text()='OK']") private WebElement okBtn;
    @FindBy(xpath = "//div[text()='Okay']") private WebElement okayBtn;
    @FindBy(xpath = "//a[@aria-label='View Template Files']") private WebElement viewTemplateFiles;
    @FindBy(xpath = "(//a[@aria-label='View Errors'])[1]") private WebElement viewError;
    @FindBy(xpath = "//a[@aria-label='SFTP Files']") private WebElement sftpLink;
    @FindBy(xpath = "(//a[@aria-label='View Details'])[1]") private WebElement viewDetails;
    @FindBy(xpath = "//input[@aria-label='Eror Message']") private WebElement errorMessage;
    @FindBy(xpath = "(//div[contains(text(),'Emp_AddressLine1')])[1]") private WebElement emp_AddressLine1;
    @FindBy(xpath = "(//div[contains(text(),'Emp_City')])[1]") private WebElement emp_City;
    @FindBy(xpath = "(//div[contains(text(),'Emp_Email')])[1]") private WebElement emp_Email;
    @FindBy(xpath = "(//div[contains(text(),'Emp_Lname')])[1]") private WebElement emp_Lname;
    @FindBy(xpath = "(//div[contains(text(),'Emp_State')])[1]") private WebElement emp_State;
    @FindBy(xpath = "(//div[contains(text(),'GroupNbr')])[1]") private WebElement groupNbr;
    @FindBy(xpath = "(//div[contains(text(),'Emp_PetBreed')])[1]") private WebElement emp_PetBreed;
    @FindBy(xpath = "(//div[contains(text(),'Emp PlanName')])[1]") private WebElement emp_PlanName;
    @FindBy(xpath = "//label[@for='coverageFromDate']/..//button[@aria-label='Toggle calendar']") private WebElement dateOfIssue;
    @FindBy(xpath = "(//label[@for='coverageToDate']/..//button[@aria-label='Toggle calendar'])[1]") private WebElement renewalDate;
    @FindBy(xpath = "(//button[contains(@class,'next2-button')])") private WebElement renewalYearChange;
    @FindBy(xpath = "(//div[contains(@class,'viewContainer')])//div[contains(@class,'month-view__days')]/button[32]") private WebElement renewalDateSelect;
    @FindBy(xpath = "(//button[contains(@class,'prev-button')])") private WebElement selectPreviousMonth;
    @FindBy(xpath = "//label[@for='enrollmentFromDate']/..//button[@aria-label='Toggle calendar']") private WebElement enrollmentFromDate;
    @FindBy(xpath = "//div[@class='sc-bczRLJ kKRUXe']") private WebElement signOut;
    @FindBy(xpath = "//input[@id='username']") private WebElement username;
    @FindBy(xpath = "//input[@id='password']") private WebElement password;
    @FindBy(xpath = "(//button[@type='submit'])[1]") private WebElement submit;
    @FindBy(xpath = "//*[text()='Aging Report']") private WebElement agingReportText;
    @FindBy(xpath = "(//a[@aria-label='View'])[1]") private WebElement viewGroup;
    @FindBy(xpath = "//button[@title='Actions']") private WebElement threeDotsActionLink;
    @FindBy(xpath = "//a[text()='Add Documents']") private WebElement addEducationalMaterialLink;
    @FindBy(xpath = "//input[@id='react-select-8-input']") private WebElement reasonAddingPet;
    @FindBy(xpath = "//*[text()='Other']") private WebElement selectReasonAddingPet;
    @FindBy(xpath = "//input[@aria-label='Pet Species']") private WebElement petSpecies;
    @FindBy(xpath = "//*[text()='Dog']") private WebElement selectPetSpecies;
    @FindBy(xpath = "//input[@aria-label='Pet Name']") private WebElement petName;
    @FindBy(xpath = "//input[@aria-label='Pet Age at Effective Date (in years)']") private WebElement petAge;
    @FindBy(xpath = "//*[text()='2']") private WebElement selectPetAge;
    @FindBy(xpath = "//input[@aria-label='Pet Weight at Adulthood (in lbs)']") private WebElement petWeight;
    @FindBy(xpath = "//div[text()='Add Pet']") private WebElement addPetBtn;
    @FindBy(xpath = "//input[@aria-label='Pet Breed']") private WebElement petBreed;
    @FindBy(xpath = "//*[text()='Mixed Breed']") private WebElement selectPetBreed;
    @FindBy(xpath = "//h3[text()='Silver']/following-sibling::div") private WebElement selectPetPlan;
    @FindBy(xpath = "//label[@for='reasonType']/following-sibling::div") private WebElement reasonForLateEnrollment;
    @FindBy(xpath = "//*[text()='Marriage']") private WebElement selectReasonForLateEnrollment;
    @FindBy(xpath = "//input[@id='agreeMpi']") private WebElement agreeMPI;
    @FindBy(xpath = "//input[@id='agreeFW']") private WebElement agreeFW;
    @FindBy(xpath = "//input[@id='agreeAA']") private WebElement agreeAA;
    @FindBy(xpath = "//input[@id='agreeEC']") private WebElement agreeEC;
    @FindBy(xpath = "//div[text()='Run Group Enroll Job']") private WebElement runEnrollJobBtn;
    @FindBy(xpath = "//div[text()='Set Date']") private WebElement setDateBtn;
    @FindBy(xpath = "//div[text()='Enrollment Status']/following-sibling::div//div[text()='Enrolled']") private WebElement enrolledStatus;
    @FindBy(xpath = "(//abbr[text()='1'])[1]") private WebElement selectFirstOfNextMonth;
    @FindBy(xpath = "(//button[contains(@class,'next-button')])[1]") private WebElement selectNextMonth;
    @FindBy(xpath = "(//abbr[text()='1'])[2]") private WebElement selectFirstOfNextMonth2;
    @FindBy(xpath = "//div[text()='MGA Group Number']") private WebElement scrollToMGAGroup;
    @FindBy(xpath = "//label[@for='groupSize']") private WebElement groupSize;
    @FindBy(xpath = "//a[@aria-label='Edit Administrators']") private WebElement editAdmin;
    @FindBy(xpath = "//a[@aria-label='Edit Employee']") private WebElement editEmployee;
    @FindBy(xpath = "//button[@aria-label='edit']") private WebElement editAdminInfo;
    @FindBy(xpath = "//div[text()='Edit Admin']") private WebElement editAdminBtn;
    @FindBy(xpath = "//div[text()='Administrators']") private WebElement administratorsLink;
    @FindBy(xpath = "//td[text()='firstName1']") private WebElement firstNameText;
    @FindBy(xpath = "//div[text()='First Name']/following-sibling::div//div[text()='firstName1']") private WebElement verifyFirstName;
    @FindBy(xpath = "//a[@aria-label='Edit Locations']") private WebElement editLocation;
    @FindBy(xpath = "//div[text()='Location Details']") private WebElement editLocationLink;
    @FindBy(xpath = "//div[text()='Address']/following-sibling::div//div[text()='address11']") private WebElement verifyAddress;
    @FindBy(xpath = "//a[text()='Add Documents']") private WebElement addDocumentsLink;
    @FindBy(xpath = "//input[@id='fileName']") private WebElement fileName;
    @FindBy(xpath = "//div[text()='Documents']") private WebElement documentTab;
    @FindBy(xpath = "//div[text()='Enrollments']") private WebElement enrollmentTab;
    @FindBy(xpath = "//div[text()='Transfer Credit To Group']") private WebElement transferCreditGroup;
    @FindBy(xpath = "//div[text()='Educational Materials']") private WebElement educationalMaterialTab;
    @FindBy(xpath = "//div[contains(text(),' Dummy  File')]") private WebElement dummyFileText;
    @FindBy(xpath = "//div[contains(text(),'Dummy  Video')]") private WebElement dummyFileVideo;
    @FindBy(xpath = "//div[@class='sc-bczRLJ iYBEBh']") private WebElement deleteFile;
    @FindBy(xpath = "//a[@aria-label='Claims']") private WebElement claimLink;
    @FindBy(xpath = "//div[@data-tip='Create Claim']") private WebElement createClaimBtn;
    @FindBy(xpath = "//input[@aria-label='Select Group']") private WebElement selectGroup;
    @FindBy(xpath = "//input[@aria-label='Select Employee']") private WebElement selectEmployee;
    @FindBy(xpath = "//input[@aria-label='Select Pet']") private WebElement selectPet;
    @FindBy(xpath = "//input[@aria-label='DOES YOUR PET HAVE ADDITIONAL INSURANCE?']") private WebElement isInsurance;
    @FindBy(xpath = "//input[contains(@aria-label,'illness')]") private WebElement illnessInfo;
    @FindBy(xpath = "(//button[@aria-label='Toggle calendar'])[1]") private WebElement calendarBtn1;
    @FindBy(xpath = "//abbr[@aria-label='August 2024']") private WebElement currentMonth;
    @FindBy(xpath = "(//button[@aria-label='Toggle calendar'])[2]") private WebElement calendarBtn2;
    @FindBy(xpath = "(//button[@aria-label='Toggle calendar'])[3]") private WebElement calendarBtn3;
    @FindBy(xpath = "(//button[@aria-label='Toggle calendar'])") private WebElement terminationCalender;
    @FindBy(xpath = "//button[contains(@class,'tile--now')]") private WebElement symptomDate;
    @FindBy(xpath = "(//button[contains(@class,'tile--now')])[1]") private WebElement treatmentDate;
    @FindBy(xpath = "//input[@aria-label='Reimbursement Methods']") private WebElement reimbursementMethod;
    @FindBy(xpath = "//input[@id='acceptance']") private WebElement agree;
    @FindBy(xpath = "//div[@data-tip='Received']") private WebElement claimStatus;
    @FindBy(xpath = "//a[@aria-label='Producers']") private WebElement producersLink;
    @FindBy(xpath = "//a[@aria-label='Sub-Producers']") private WebElement subProducersLink;
    @FindBy(xpath = "//a[@aria-label='Create Producer']") private WebElement createProducer;
    @FindBy(xpath = "//input[@id='producerCode']") private WebElement producerCode;
    @FindBy(xpath = "//label[@for='type']/following-sibling::div[1]") private WebElement producerType;
    @FindBy(xpath = "//*[text()='MGA']") private WebElement selectProducerType;
    @FindBy(xpath = "//input[@id='name']") private WebElement producerName;
    @FindBy(xpath = "//input[@aria-label='Authorized States']") private WebElement authorizedState;
    @FindBy(xpath = "//input[@aria-label='Authorized Provinces']") private WebElement authorizedProvinces;
    @FindBy(xpath = "//label[@for='status']/following-sibling::div[1]") private WebElement status;
    @FindBy(xpath = "//*[text()='Active']") private WebElement selectStatus;
    @FindBy(xpath = "//input[@id='address.addressLine1']") private WebElement producerAddress;
    @FindBy(xpath = "//input[@id='address.city']") private WebElement producerCity;
    @FindBy(xpath = "//input[@id='contactName']") private WebElement contactName;
    @FindBy(xpath = "//input[@id='contactAddress.addressLine1']") private WebElement contactAdd;
    @FindBy(xpath = "//input[@id='contactAddress.city']") private WebElement contactCity;
    @FindBy(xpath = "//label[@for='contactAddress.state']/following-sibling::div[1]") private WebElement contactState;
    @FindBy(xpath = "//input[@id='contactAddress.zipcode']") private WebElement contactZipcode;
    @FindBy(xpath = "//input[@id='contactEmail']") private WebElement contactEmail;
    @FindBy(xpath = "//div[text()='No']") private WebElement noBtn;
    @FindBy(xpath = "//div[text()='Producer Status']/following-sibling::div") private WebElement producerStatus;
    @FindBy(xpath = "//a[@aria-label='Create Sub Producer']") private WebElement createSubProducer;
    @FindBy(xpath = "//div[text()='Status']/following-sibling::div") private WebElement subProducerStatus;
    @FindBy(xpath = "(//div[@aria-label='Producer Name']//div[2])[1]/div/div") private WebElement producerNameTxt;
    @FindBy(xpath = "(//div[@aria-label='Sub-Producer']//div[2])[1]/div/div") private WebElement subProducerNameTxt;
    @FindBy(xpath = "//button[@type='submit']") private WebElement verifyButton;
    @FindBy(xpath = "//a[@aria-label='Life Events']") private WebElement lifeEventLink;
    @FindBy(xpath = "//button[@aria-label='Assign To']") private WebElement assignTo;
    @FindBy(xpath = "//input[@aria-label='Assign to User']") private WebElement assignToUser;
    @FindBy(xpath = "//*[contains(text(),'@everestek.com')]") private WebElement selectUser;
    @FindBy(xpath = "//div[text()='Assigned To']/following-sibling::div//div[text()='Ashok Kumar']") private WebElement verifyAssignedUser;
    @FindBy(xpath = "//div[text()='QLE Type']/following-sibling::div") private WebElement VerifyQleType;
    @FindBy(xpath = "//button[@aria-label='Approve']") private WebElement approveQLE;
    @FindBy(xpath = "//button[@aria-label='Decline']") private WebElement declineQLE;
    @FindBy(xpath = "//a[@aria-label='Add Documents']") private WebElement addDocumentQLE;
    @FindBy(xpath = "//label[@for='declinedReasonType']/following-sibling::div") private WebElement declineReasonQLE;
    @FindBy(xpath = "//*[text()='Insufficient Documentation']") private WebElement selectDeclineReasonQLE;
    @FindBy(xpath = "//div[text()='Request Status']/following-sibling::div//div[text()='Approved']") private WebElement verifyApprovedQLE;
    @FindBy(xpath = "//div[text()='Request Status']/following-sibling::div//div[text()='Declined']") private WebElement verifyDeclinedQLE;
    @FindBy(xpath = "//button[@aria-label='Unassign']") private WebElement unassignUser;
    @FindBy(xpath = "//div[text()='Assigned To']/following-sibling::div//div[text()='NA']") private WebElement verifyUnAssignUser;
    @FindBy(xpath = "//a[@aria-label='Enrollments']") private WebElement enrollmentLink;
    @FindBy(xpath = "//label[@for='pet.species']/following-sibling::div") private WebElement petSpeciesQLE;
    @FindBy(xpath = "//label[@for='reasonType']/following-sibling::div") private WebElement reasonForAddingPet;
    @FindBy(xpath = "//label[@for='pet.age']/following-sibling::div") private WebElement petAgeQLE;
    @FindBy(xpath = "//input[@id='pet.weight']") private WebElement petWeightQLE;
    @FindBy(xpath = "//label[@for='pet.breed']/following-sibling::div") private WebElement petBreedQLE;
    @FindBy(xpath = "//div[text()='Calculate Premium']") private WebElement calculatePremium;
    @FindBy(xpath = "//div[text()='Inactive Pet Information']") private WebElement inactivePetInfoLink;
    @FindBy(xpath = "//div[@aria-label='Pet Name']//div[text()='abc']") private WebElement inactivePetName;
    @FindBy(xpath = "//div[text()='No Results']") private WebElement noResult;
    @FindBy(xpath = "//div[text()='Pet Information']") private WebElement petInformationLink;
    @FindBy(xpath = "//button[@aria-label='Remove']") private WebElement removePet;
    @FindBy(xpath = "//a[text()='Edit Commission']") private WebElement editCommissionLink;
    @FindBy(xpath = "//div[@data-tip='edit']") private WebElement editCommissionBtn;
    @FindBy(xpath = "//div[contains(@class,'view__months')]//button[1]") private WebElement firstMonth;
    @FindBy(xpath = "//div[@data-tip='Delete']") private WebElement removeCommission;
    @FindBy(xpath = "//div[text()='No Commissions Found']") private WebElement noCommissionTxt;
    @FindBy(xpath = "(//div[@data-tip='Terminate'])[1]") private WebElement terminateEmpBtn;
    @FindBy(xpath = "(//div[@data-tip='Delete Employee'])[1]") private WebElement deleteEmpBtn;
    @FindBy(xpath = "//label[@for='terminationType']/following-sibling::div") private WebElement terminationType;
    @FindBy(xpath = "//*[text()='Resignation']") private WebElement selectTerminationType;
    @FindBy(xpath = "//div[text()='submit']") private WebElement submitBtn1;
    @FindBy(xpath = "//div[@data-tip='Add Documents']") private WebElement addDocumentBtn;
    @FindBy(xpath = "//tr[2]/td[7]/div") private WebElement billDate;
    @FindBy(xpath = "//div[text()='Billing Calendar']") private WebElement billingCalendarTab;
    @FindBy(xpath = "//div[text()='Run Employee Payment Job']") private WebElement runEmploymentPaymentJob;
    @FindBy(xpath = "//div[text()='Run Group Payment Job']") private WebElement runGroupPaymentJob;
    @FindBy(xpath = "//div[text()='Generate Bill']") private WebElement generateBill;
    @FindBy(xpath = "//a[text()='Upload Remittance']") private WebElement uploadRemittance;
    @FindBy(xpath = "//*[text()='Delete Group']") private WebElement deleteGroup;
    @FindBy(xpath = "//*[text()='Remove All Employees']") private WebElement removeAllEmployees;
    @FindBy(xpath = "//*[text()='Add Notes']") private WebElement addNote;
    @FindBy(xpath = "//*[text()='Yes']") private WebElement deleteConfirmBtn;
    @FindBy(xpath = "//*[text()='Successfully deleted a Group']") private WebElement deleteConfirmMsg;
    @FindBy(xpath = "//*[text()='Successfully removed all employees']") private WebElement removeEmpMsg;
    @FindBy(xpath = "//*[text()='Successfully deleted an employee']") private WebElement deleteEmpMsg;
    @FindBy(xpath = "(//*[text()='Remove Pet'])[2]") private WebElement removePetbtn;
    @FindBy(xpath = "//label[@for='paymentType']/following-sibling::div") private WebElement paymentType;
    @FindBy(xpath = "//div[text()='Billing Reports']") private WebElement billingReports;
    @FindBy(xpath = "//div[text()='REMITTANCE']") private WebElement remittanceType;
    @FindBy(xpath = "//button[@aria-label='Reopen']") private WebElement reopenBtn;
    @FindBy(xpath = "//label[@for='reopenReasonType']/following-sibling::div") private WebElement reopenRequestType;
    @FindBy(xpath = "//*[text()='Pet Is Eligible']") private WebElement selectReopenRequestType;
    @FindBy(xpath = "//div[text()='Request Status']/following-sibling::div") private WebElement requestStatus;
    @FindBy(xpath = "(//button[contains(@class,'next-button')])[2]") private WebElement calendarMonthChange2;
    @FindBy(xpath = "(//abbr[text()='1'])[3]") private WebElement selectTerminationDate;
    @FindBy(xpath = "//tr[2]/td[8]/div") private WebElement payrollDate;
    @FindBy(xpath = "//tr[2]/td[7]/div") private WebElement actualPayrollDate;
    @FindBy(xpath = "//button[@class='react-calendar__navigation__label']/span") private WebElement calendarMonthTxt;
    @FindBy(xpath = "//div[text()='AUTO_GENERATED_PAYROLL_DEDUCTION']") private WebElement payrollDeductionType;
    @FindBy(xpath = "(//div[@data-tip='Download'])[1]") private WebElement downloadPayrollBill;
    @FindBy(xpath = "//div[text()='Report Type']/following-sibling::div//div[text()='PAYMENT_RECONCILIATION']") private WebElement paymentReconcillation;
    @FindBy(xpath = "//button[contains(@class,'label')]/span") private WebElement monthYear;
    @FindBy(xpath = "//div[text()='Run Pet Cash Premium Report Job']") private WebElement petCashPremiumBtn;
    @FindBy(xpath = "//div[contains(text(),'Run Group Commission Job')]") private WebElement runCommissionBtn;
    @FindBy(xpath = "//a[@aria-label='Aging Report']") private WebElement runAgingBtn;
    @FindBy(xpath = "//div[text()='Create Renewal']") private WebElement createRenewalLink;
    @FindBy(xpath = "//label[@for='censusType']/following-sibling::div[1]") private WebElement renewalType;
    @FindBy(xpath = "(//button[contains(@class,'next2-button')])[1]") private WebElement renewalEnrollFromYear;
    @FindBy(xpath = "(//button[contains(@class,'next2-button')])") private WebElement renewalEnrollToYear;
    @FindBy(xpath = "(//button[@aria-label='Toggle calendar'])[3]") private WebElement RenewalcalendarBtnFrom;
    @FindBy(xpath = "(//button[@aria-label='Toggle calendar'])[4]") private WebElement RenewalcalendarBtnTo;
    @FindBy(xpath = "(//abbr[text()='1'])[3]") private WebElement renewalEnrollFromFirstDate;
    @FindBy(xpath = "//abbr[text()='1']") private WebElement renewalEnrollFirstDate;
    @FindBy(xpath = "//div[text()='Renewal Status']/following-sibling::div") private WebElement renewalStatus;
    @FindBy(xpath = "//div[text()='Silver Plan Details']") private WebElement silverPlanDetails;
    @FindBy(xpath = "//div[text()='Master Policy End Date']/following-sibling::div") private WebElement masterPolicyDate;
    @FindBy(xpath = "//div[contains(@data-tip,'left for renewal')]") private WebElement groupColor;
    @FindBy(xpath = "//a[text()='Group Settings']") private WebElement groupSettingLink;
    @FindBy(xpath = "//a[text()='Add Credit']") private WebElement addCredit;
    @FindBy(xpath = "//*[text()='Refund Group Credit']") private WebElement refundCredit;
    @FindBy(xpath = "//h3[text()='Notifications']") private WebElement notificationLink;
    @FindBy(xpath = "//input[@aria-label='Do not send email']") private WebElement doNotSendEmail;
    @FindBy(xpath = "//div[text()='Save']") private WebElement saveBtn;
    @FindBy(xpath = "(//div[1][text()='Save'])[2]") private WebElement saveBtn2;
    @FindBy(xpath = "//input[@id='renewalNotificationDays']") private WebElement renewalNotification;
    @FindBy(xpath = "//input[@id='enrolmentEmailNotificationDays']") private WebElement enrollmentNotification;
    @FindBy(xpath = "//div[contains(@class,'Snackbar_snackbar__text')]") private WebElement notificationUpdatedSuccess;
    @FindBy(xpath = "//div[text()='Renewal Notification Date']/following-sibling::div") private WebElement renewalNotificationDate;
    @FindBy(xpath = "//div[text()='Cancel Renewal']") private WebElement cancelRenewal;
    @FindBy(xpath = "//label[@for='versionId']") private WebElement renewalVersionId;
    @FindBy(xpath = "//input[@aria-label='version']") private WebElement renewalPolicyDropdown;
    @FindBy(xpath = "//input[@name='versionId']/preceding-sibling::div/div[2]") private WebElement selectRenewalPolicy;
    @FindBy(xpath = "//div[text()='Run Group Renewal Activation Job']") private WebElement runRenewalActivationJob;
    @FindBy(xpath = "//div[text()='Terminate Group']") private WebElement terminateGroup;
    @FindBy(xpath = "//label[@for='terminationDate']/following-sibling::div") private WebElement terminationDate;
    @FindBy(xpath = "//div[@aria-label='Group Status']/div[2]") private WebElement groupStatus;
    @FindBy(xpath = "//div[text()='Master Policy Effective Date']/following-sibling::div") private WebElement masterPolicyEffectiveDate;
    @FindBy(xpath = "//input[@aria-label='Termination Date']") private WebElement enterTerminateDate;
    @FindBy(xpath = "//input[@aria-label='Termination Date']/../../../div[1]") private WebElement getTerminateDate;
    @FindBy(xpath = "//div[text()='Run Group Termination Job']") private WebElement runGroupTerminate;
    @FindBy(xpath = "//button[@aria-label='Clear value']") private WebElement clearDate;
    @FindBy(xpath = "//div[text()='Employee Id']/following-sibling::div") private WebElement verifyEmpId;
    @FindBy(xpath = "//div[text()='Enrollment Start Date']/following-sibling::div") private WebElement renewalEnrollmentStartDate;
    @FindBy(xpath = "(//div[@color='primaryDark'])[4]") private WebElement verifyEmpStatus;
    @FindBy(xpath = "//*[contains(text(),'There was an error creating the user')]") private WebElement emailIdValidation;
    @FindBy(xpath = "//div[text()='updated contact A']") private WebElement verifyUpdateStatus;
    @FindBy(xpath = "//div[text()='Group']/following-sibling::div//a") private WebElement groupViewDetail;
    @FindBy(xpath = "//div[text()='Run Employee Dependent Migration Job']") private WebElement runEmpMigrationJob;
    @FindBy(xpath = "//a[@aria-label='Renew Policy']") private WebElement renewalPolicyBtn;
    @FindBy(xpath = "(//h3[text()='Silver']/following-sibling::div)[2]") private WebElement selectRenewalPetPlan;
    @FindBy(xpath = "//div[text()='Run Decline QLE By Group Job']") private WebElement runDeclineQleJob;
    @FindBy(xpath = "//div[text()='Request Status']/following-sibling::div") private WebElement qleRequestStatus;
    @FindBy(xpath = "//*[@class='sc-bczRLJ eQksrh']") private WebElement altreg;
    @FindBy(xpath = "//div[text()='Error']") private WebElement regError;
    @FindBy(xpath = "//input[@id='createQle']") private WebElement addPetToActivePolicy;
    @FindBy(xpath = "//tr[12]/td[3]/div") private WebElement payrollEndDate;
    @FindBy(xpath = "//button[contains(@class,'rangeBothEnds')]/following-sibling::button[1]") private WebElement nextActiveDate;
    @FindBy(xpath = "//div[text()='Run Group Policy Expiration Job']") private WebElement runGroupExpiryJob;
    @FindBy(xpath = "//tr[1]/td[3]/div") private WebElement retroTerminationDate;
    @FindBy(xpath = "(//input[@aria-label='Month'])[2]") private WebElement terminateDateInputMonth;
    @FindBy(xpath = "(//input[@aria-label='Day'])[2]") private WebElement terminateDateInputDay;
    @FindBy(xpath = "(//input[@aria-label='Year'])[2]") private WebElement terminateDateInputyear;
    @FindBy(xpath = "//input[@id='amount']") private WebElement addCreditAmount;
    @FindBy(xpath = "//div[text()='95']") private WebElement unappliedFunds;
    @FindBy(xpath = "//div[@aria-label='Outstanding Balance']") private WebElement outstandingBalance;
    @FindBy(xpath = "//input[@aria-label='Categories']") private WebElement addNoteCategories;
    @FindBy(xpath = "//input[@aria-label='Payroll Cycle']") private WebElement addNotePayrollCycle;
    @FindBy(xpath = "//textarea[@aria-label='Comment']") private WebElement addNoteComment;
    @FindBy(xpath = "//*[text()='Admin / Benbroker Changes']") private WebElement adminBenbrokerChanges;
    @FindBy(xpath = "//*[text()='1']") private WebElement selectPayrollCycle;
    @FindBy(xpath = "//*[text()='Notes added successfully']") private WebElement noteAddedPopUp;
    @FindBy(xpath = "//div[text()='Notes']") private WebElement notesSelection;
    @FindBy(xpath = "//button[@aria-label='Delete']") private WebElement deleteNote;
    @FindBy(xpath = "//*[text()='Notes deleted successfully']") private WebElement noteDeletedPopUp;
    @FindBy(xpath = "//div[text()='1886 employee number does not exist for this group']") private WebElement incorrectEmpID;
    @FindBy(xpath = "//div[text()='GroupNbr must be equal to GPPI-03282']") private WebElement incorrectGroupID;
    @FindBy(xpath = "(//div[text()='Missing Value'])[1]") private WebElement blankValues;
    @FindBy(xpath = "//div[text()='Bill Date']") private WebElement blankBillDate;
    @FindBy(xpath = "//div[text()='Payroll Pay Date']") private WebElement blankPayrollPayDate;
    @FindBy(xpath = "(//div[text()='Employee Amount Deducted'])[1]") private WebElement negativeEmployeeAmountDeducted;
    @FindBy(xpath = "(//div[text()='Employer Amount Contributed'])[1]") private WebElement negativeEmployerAmountContributed;
    @FindBy(xpath = "//div[@aria-label='Credit Available']") private WebElement creditAvailable;
    @FindBy(xpath = "//div[@aria-label='Adjustment Paid']") private WebElement adjustmentPaid;
    @FindBy(xpath = "//div[@aria-label='Adjustment Applied']") private WebElement adjustmentApplied;
    @FindBy(xpath = "(//input[@aria-label='Year'])[1]") private WebElement yearInput;
    @FindBy(xpath = "(//input[@aria-label='Month'])[1]") private WebElement monthInput;
    @FindBy(xpath = "(//input[@aria-label='Day'])[1]") private WebElement dayInput;
    @FindBy(xpath = "//a[@aria-label='Billing']") private WebElement billingLink;
    @FindBy(xpath = "//*[text()='Group Aging Report']") private WebElement groupAgingReport;
    @FindBy(xpath = "(//div[@aria-label='Group Name']//div[2])[1]/div/div") private WebElement groupNameTxt;
    @FindBy(xpath = "//div[text()='Billing Status']/following-sibling::div") private WebElement billingStatus;
    @FindBy(xpath = "//a[@aria-label='Accounts Dashboard']") private WebElement accountDashboard;
    @FindBy(xpath = "//div[@data-tip='Confirm']") private WebElement actionConfirm;
    @FindBy(xpath = "//input[@id='confirmAmount']") private WebElement confirmAmount;
    @FindBy(xpath = "//button[contains(@class,'tile--now')]") private WebElement todayDate;
    @FindBy(xpath = "//div[text()='Add']") private WebElement addBtn;
    @FindBy(xpath = "//input[@id='controlAmount']") private WebElement controlAmount;
    @FindBy(xpath = "//div[text()='Submit Confirmations']") private WebElement submissionConfirmBtn;
    @FindBy(xpath = "//*[text()='Master Calendar']") private WebElement masterCalendar;
    @FindBy(xpath = "//a[text()='Pet Cash Premium Report']") private WebElement cashPremiumLink;
    @FindBy(xpath = "//input[@aria-label='Date']") private WebElement selectDate;
    @FindBy(xpath = "//abbr[text()='15']") private WebElement selectMidDateOfMonth;
    @FindBy(xpath = "//a[@aria-label='Create User']") private WebElement creatUser;
    @FindBy(xpath = "//div[text()='Download']") private WebElement downloadBtn;
    @FindBy(xpath = "//a[@aria-label='Aging Report']") private WebElement ageingReportLink;
    @FindBy(xpath = "//a[text()='Commission Report']") private WebElement commissionReportLink;
    @FindBy(xpath = "//label[@for='groupMGA']/following-sibling::div[1]") private WebElement mga;
    @FindBy(xpath = "//*[text()='PPI']") private WebElement selectGroupMGA;
    @FindBy(xpath = "//input[@aria-label='Month']") private WebElement monthDate;
    @FindBy(xpath = "//input[@aria-label='Year']") private WebElement yearDate;
    @FindBy(xpath = "//input[@id='groupNumber']") private WebElement GroupNumber;
    @FindBy(xpath = "(//*[text()='Actual Bill Creation Date'])[1]") private WebElement billCreationDate;
    @FindBy(xpath = "(//*[text()='Enrolled Employees'])[1]") private WebElement noOfEmployees;
    @FindBy(xpath = "(//*[text()='Amount Owed'])[1]") private WebElement amountOwned;
    @FindBy(xpath = "//*[text()='Default View']") private WebElement defaultView;
    @FindBy(xpath = "//*[text()='Past View']") private WebElement pastView;
    @FindBy(xpath = "//div[@class='sc-bczRLJ bxjIdW']") private WebElement slaMarker;
    @FindBy(xpath = "//*[text()='Master Billing Calendar Report']") private WebElement exportMasterCalendarReport;
    @FindBy(xpath = "//*[text()='Master Billing Calendar Report Exported Successfully']") private WebElement exportMasterCalendarTxt;
    @FindBy(xpath = "//button[@aria-label='Export Status']") private WebElement exportEnrollmentReport;
    @FindBy(xpath = "(//*[text()='Enrollment Report'])[1]") private WebElement selectReportType;
    @FindBy(xpath = "(//*[text()='Employee Report Exported Successfully'])[1]") private WebElement reportExported;
    @FindBy(xpath = "//a[@aria-label='Remit']") private WebElement remitBtn;
    @FindBy(xpath = "//input[@aria-label='Remittance Method Type']") private WebElement remittanceMethodType;
    @FindBy(xpath = "//*[text()='Auto Remittance']") private WebElement autoRemittance;
    @FindBy(xpath = "//*[text()='Upload File']") private WebElement uploadRemittanceFile;
    @FindBy(xpath = "//button[@type='submit']") private WebElement done;
    @FindBy(xpath = "//button[@aria-label='Confirm']") private WebElement confirm;
    @FindBy(xpath = "//a[@aria-label='Accounts Dashboard']") private WebElement accountsDashboard;
    @FindBy(xpath = "//div[text()='Add']") private WebElement add;
    @FindBy(xpath = "(//a[@aria-label='View'])[1]") private WebElement view;
    @FindBy(xpath = "(//button[@aria-label='Download'])[1]") private WebElement download;
    @FindBy(xpath = "//input[@class='filepond--browser']") private WebElement browser;
    @FindBy(xpath = "(//button[@title='Actions'])[1]") private WebElement actionsButton;
    @FindBy(xpath = "//div[text()='Change Employee Plan']") private WebElement changeEmployeePlan;
    @FindBy(xpath = "//button[@aria-label='Refresh Data']") private WebElement refreshData;
    @FindBy(xpath = "//*[text()='Yes']") private WebElement yesBtn;
    @FindBy(xpath = "//*[text()='Megha Dhotarkar (megha.dhotarkar@everestek.com)']") private WebElement nameTxt;
    @FindBy(xpath = "//input[@aria-label='Employee ID']") private WebElement employeeIddropdown;
    @FindBy(xpath = "(//div[@data-for='dg-tooltip'])[19]") private WebElement renewalTypeStatus;
    @FindBy(xpath = "//button[@type='button']//div[contains(text(),'01/01/2026')]") private WebElement component1;
    @FindBy(xpath = "//button[@type='button']//div[contains(text(),'01/01/2028')]") private WebElement component11;
    @FindBy(xpath = "//div[contains(text(), 'Renew')]") private WebElement component2;
    @FindBy(xpath = "//*[starts-with(text(), 'Your current coverage will end on')]") private WebElement component3;
    @FindBy(xpath = "//*[text()='Enroll in Benefit Period 01/01/2026 - 01/01/2027']") private WebElement component4;
    @FindBy(xpath = "//div[contains(text(), 'Add more pets')]") private WebElement component5;
    @FindBy(xpath = "//div[contains(text(), 'ADD MORE PETS')]") private WebElement component15;
    @FindBy(xpath = "//div[contains(text(), 'Claim')]") private WebElement component6;
    @FindBy(xpath = "//*[text()='Update Coverage']") private WebElement component7;
    @FindBy(xpath = "//*[text()='Renew Policy']") private WebElement component8;
    @FindBy(xpath = "//button[@type='button']//div[contains(text(),'COMPLETE YOUR')]") private WebElement component9;
    @FindBy(xpath = "//button[@aria-label='Previous Page']//preceding-sibling::div") private WebElement totalNumberOfNotes;


    public GroupsDashboardPage(WebDriver driver) {
        PageFactory.initElements(driver, this);
        WEB_ELEMENT_MAPPING.put("Group Link", groupLink);
        WEB_ELEMENT_MAPPING.put("Employee ID Search", employeeIddropdown);
        WEB_ELEMENT_MAPPING.put("Renewal Type Status", renewalTypeStatus);
        WEB_ELEMENT_MAPPING.put("Claims", claimsLink);
        WEB_ELEMENT_MAPPING.put("Life Events", lifeEvents);
        WEB_ELEMENT_MAPPING.put("Export Status", exportBtn);
        WEB_ELEMENT_MAPPING.put("Report Type", reportType);
        WEB_ELEMENT_MAPPING.put("Ineligible Pet Report", ineligiblePetReport);
        WEB_ELEMENT_MAPPING.put("Missing Pet Demographics Report", missingPetDemographicsReport);
        WEB_ELEMENT_MAPPING.put("Submit Button", submitBtn);
        WEB_ELEMENT_MAPPING.put("Report Exported Successfully", exportedSuccessfully);
        WEB_ELEMENT_MAPPING.put("Ben Admin Link", benAdminLink);
        WEB_ELEMENT_MAPPING.put("Create Ben Admin", createBenAdmin);
        WEB_ELEMENT_MAPPING.put("Post Enrollment Checkbox", postEnrollmentCheckbox);
        WEB_ELEMENT_MAPPING.put("Sign Out", signOut);
        WEB_ELEMENT_MAPPING.put("Username", username);
        WEB_ELEMENT_MAPPING.put("Password", password);
        WEB_ELEMENT_MAPPING.put("Sign In", submit);
        WEB_ELEMENT_MAPPING.put("Aging Report Text", agingReportText);
        WEB_ELEMENT_MAPPING.put("View", viewGroup);
        WEB_ELEMENT_MAPPING.put("Three Dots Action", threeDotsActionLink);
        WEB_ELEMENT_MAPPING.put("Add Educational Material", addEducationalMaterialLink);
        WEB_ELEMENT_MAPPING.put("Helpline", helpline);
        WEB_ELEMENT_MAPPING.put("Contact Us", contactUs);
        WEB_ELEMENT_MAPPING.put("Create Group", createGroup);
        WEB_ELEMENT_MAPPING.put("Create Group Header", createGroupHeader);
        WEB_ELEMENT_MAPPING.put("Promote Button", promoteButton);
        WEB_ELEMENT_MAPPING.put("Promote Employee Drop Down", promoteEmployeeDropDown);
        WEB_ELEMENT_MAPPING.put("Select Ben Broker", selectBenBroker);
        WEB_ELEMENT_MAPPING.put("Select Admin", selectAdmin);
        WEB_ELEMENT_MAPPING.put("Select Citadel", selectCitadel);
        WEB_ELEMENT_MAPPING.put("Producer Drop Down", producerDropDown);
        WEB_ELEMENT_MAPPING.put("Sub Producer Code", subProducerCode);
        WEB_ELEMENT_MAPPING.put("Promote 1", promote1);
        WEB_ELEMENT_MAPPING.put("Remove Group Admin", removeGroupAdmin);
        WEB_ELEMENT_MAPPING.put("Remove Group Admin Button", removeGroupAdminButton);
        WEB_ELEMENT_MAPPING.put("Update Primary Email", updatePrimaryEmail);
        WEB_ELEMENT_MAPPING.put("Primary Email", primaryEmail);
        WEB_ELEMENT_MAPPING.put("Export Button", exportBtn);
        WEB_ELEMENT_MAPPING.put("Exported Successfully", exportedSuccessfully);
        WEB_ELEMENT_MAPPING.put("Group Type", groupType);
        WEB_ELEMENT_MAPPING.put("Select Group Type", selectGroupType);
        WEB_ELEMENT_MAPPING.put("Select Group Type BA", selectGroupTypeBA);
        WEB_ELEMENT_MAPPING.put("Group Ben Admin", groupBenAdmin);
        WEB_ELEMENT_MAPPING.put("List Group Ben Admin", listGroupBenAdmin);
        WEB_ELEMENT_MAPPING.put("Select Ben Admin", selectBenAdmin);
        WEB_ELEMENT_MAPPING.put("Group MGA", groupMGA);
        WEB_ELEMENT_MAPPING.put("Select Group MGA Pet", selectGroupMGAPet);
        WEB_ELEMENT_MAPPING.put("Select Group MGA Figo", selectGroupMGAFigo);
        WEB_ELEMENT_MAPPING.put("Company Code", companyCode);
        WEB_ELEMENT_MAPPING.put("Payroll Deduction Report Level", payrollDeductionReportLevel);
        WEB_ELEMENT_MAPPING.put("Select Company Code", selectCompanyCode);
        WEB_ELEMENT_MAPPING.put("Select Payroll Deduction Report Level", selectpayrollDeductionReportLevel);
        WEB_ELEMENT_MAPPING.put("Agency Code", agencyCode);
        WEB_ELEMENT_MAPPING.put("SIC Code", sicCode);
        WEB_ELEMENT_MAPPING.put("MGA Group Number", mgaGroupNumber);
        WEB_ELEMENT_MAPPING.put("Company Name", companyName);
        WEB_ELEMENT_MAPPING.put("Location Name", locationName);
        WEB_ELEMENT_MAPPING.put("Address Line 1", addressLine1);
        WEB_ELEMENT_MAPPING.put("City", city);
        WEB_ELEMENT_MAPPING.put("State", state);
        WEB_ELEMENT_MAPPING.put("Select State", selectState);
        WEB_ELEMENT_MAPPING.put("Zipcode", zipcode);
        WEB_ELEMENT_MAPPING.put("Zipcode 2", zipcode2);
        WEB_ELEMENT_MAPPING.put("Contact Type", contactType);
        WEB_ELEMENT_MAPPING.put("Select Contact Type", selectContactType);
        WEB_ELEMENT_MAPPING.put("Contact Number", contactNumber);
        WEB_ELEMENT_MAPPING.put("New Hire Waiting Period", newHireWaitingPeriod);
        WEB_ELEMENT_MAPPING.put("Select New Waiting Period", selectnewWaitingPeriod);
        WEB_ELEMENT_MAPPING.put("First Of Month Waiting Period", firstOfMonthWaitingPeriod);
        WEB_ELEMENT_MAPPING.put("Enrollment Period", enrollmentPeriod);
        WEB_ELEMENT_MAPPING.put("Contact Type 1", contactType1);
        WEB_ELEMENT_MAPPING.put("Select Contact Type 1", selectContactType1);
        WEB_ELEMENT_MAPPING.put("First Name", firstName);
        WEB_ELEMENT_MAPPING.put("User First Name", userFirstName);
        WEB_ELEMENT_MAPPING.put("Last Name", lastName);
        WEB_ELEMENT_MAPPING.put("Email", email);
        WEB_ELEMENT_MAPPING.put("Phone Type", phoneType);
        WEB_ELEMENT_MAPPING.put("Phone Number", phoneNumber);
        WEB_ELEMENT_MAPPING.put("Select Phone Type", selectPhoneType);
        WEB_ELEMENT_MAPPING.put("Create Admin", createAdmin);
        WEB_ELEMENT_MAPPING.put("Admin Result", adminResult);
        WEB_ELEMENT_MAPPING.put("Next Button", nextButton);
        WEB_ELEMENT_MAPPING.put("Producer Configuration", producerConfiguration);
        WEB_ELEMENT_MAPPING.put("Snack Bar", snackBar);
        WEB_ELEMENT_MAPPING.put("Billing Address 1", billingAddress1);
        WEB_ELEMENT_MAPPING.put("Billing City", billingCity);
        WEB_ELEMENT_MAPPING.put("Billing State", billingState);
        WEB_ELEMENT_MAPPING.put("Billing Zip Code", billingZipCode);
        WEB_ELEMENT_MAPPING.put("Account Name", accountName);
        WEB_ELEMENT_MAPPING.put("Payment Method", paymentMethod);
        WEB_ELEMENT_MAPPING.put("Select Payment Method", selectPaymentMethod);
        WEB_ELEMENT_MAPPING.put("Billing Type", billingType);
        WEB_ELEMENT_MAPPING.put("Select Pay In Advance", selectPayInAdvance);
        WEB_ELEMENT_MAPPING.put("Select Pay In Arrears", selectPayInArrears);
        WEB_ELEMENT_MAPPING.put("Select Billing Type", selectBillingType);
        WEB_ELEMENT_MAPPING.put("Billing Cycle", billingCycle);
        WEB_ELEMENT_MAPPING.put("Select Billing Cycle", selectBillingCycle);
        WEB_ELEMENT_MAPPING.put("Payroll Frequency", payrollFrequency);
        WEB_ELEMENT_MAPPING.put("Select Payroll Frequency", selectPayrollFrequency);
        WEB_ELEMENT_MAPPING.put("Wait for Date", waitForDate);
        WEB_ELEMENT_MAPPING.put("First Payroll Start Date", firstPayrollStartDate);
        WEB_ELEMENT_MAPPING.put("Bill Days Prior to Payroll", billDaysPriorToPayroll);
        WEB_ELEMENT_MAPPING.put("Generate Payroll Button", generatePayrollBtn);
        WEB_ELEMENT_MAPPING.put("Hide Payroll Button", hidePayrollBtn);
        WEB_ELEMENT_MAPPING.put("Payroll Cycle Text", payrollCycleText);
        WEB_ELEMENT_MAPPING.put("Groups Dashboard", groupDashboard);
        WEB_ELEMENT_MAPPING.put("Groups Dropdown", groupsDropdown);
        WEB_ELEMENT_MAPPING.put("Select All Groups", selectAllGroups);
        WEB_ELEMENT_MAPPING.put("Date Input Month", dateInput_Month);
        WEB_ELEMENT_MAPPING.put("Date Input Day", dateInput_Day);
        WEB_ELEMENT_MAPPING.put("Date Input Year", dateInput_year);
        WEB_ELEMENT_MAPPING.put("Calendar Button", calendarBtn);
        WEB_ELEMENT_MAPPING.put("First Coverage Start Date", firstCoverageStartDate);
        WEB_ELEMENT_MAPPING.put("Calendar Month Change", calendarMonthChange);
        WEB_ELEMENT_MAPPING.put("Calendar Year Change", calendarYearChange);
        WEB_ELEMENT_MAPPING.put("Select New Year 2023", selectNewYear2023);
        WEB_ELEMENT_MAPPING.put("Select Current Year", selectCurrentYear);
        WEB_ELEMENT_MAPPING.put("Select New Year 2025", selectNewYear2025);
        WEB_ELEMENT_MAPPING.put("Select January", selectJanuary);
        WEB_ELEMENT_MAPPING.put("Select First January", selectFirstJanuary);
        WEB_ELEMENT_MAPPING.put("Select First January 2", selectFirstJanuary2);
        WEB_ELEMENT_MAPPING.put("Select First January 3", selectFirstJanuary3);
        WEB_ELEMENT_MAPPING.put("Select February", selectFeb);
        WEB_ELEMENT_MAPPING.put("Select 11 January", select11January);
        WEB_ELEMENT_MAPPING.put("Select 9 February", select9Feb);
        WEB_ELEMENT_MAPPING.put("Select January 2025", selectJanuary2025);
        WEB_ELEMENT_MAPPING.put("Calendar Year Change 2", calendarYearChange2);
        WEB_ELEMENT_MAPPING.put("Calendar Year Change 3", calendarYearChange3);
        WEB_ELEMENT_MAPPING.put("Tomorrow Date Picker", tomorrowDatePicker);
        WEB_ELEMENT_MAPPING.put("Group Name", groupName);
        WEB_ELEMENT_MAPPING.put("Federal Number", federalNumber1);
        WEB_ELEMENT_MAPPING.put("Filter Button", filterButton);
        WEB_ELEMENT_MAPPING.put("Search Group Name", searchGroupName);
        WEB_ELEMENT_MAPPING.put("Search Email", searchEmail);
        WEB_ELEMENT_MAPPING.put("Verify Email", verifyEmail);
        WEB_ELEMENT_MAPPING.put("Search First Name", searchFirstName);
        WEB_ELEMENT_MAPPING.put("Search Employee ID", searchEmpid);
        WEB_ELEMENT_MAPPING.put("Activate Group", activateGroup);
        WEB_ELEMENT_MAPPING.put("Class Name", className);
        WEB_ELEMENT_MAPPING.put("Choose Driver", chooseDriver);
        WEB_ELEMENT_MAPPING.put("Select Driver", selectDriver);
        WEB_ELEMENT_MAPPING.put("Job Title Value", jobTitleValue);
        WEB_ELEMENT_MAPPING.put("Add Driver Button", addDriverBtn);
        WEB_ELEMENT_MAPPING.put("Add Plan", addPlan);
        WEB_ELEMENT_MAPPING.put("Plan Name", planName);
        WEB_ELEMENT_MAPPING.put("Plan Name G", planNameG);
        WEB_ELEMENT_MAPPING.put("Product", product);
        WEB_ELEMENT_MAPPING.put("Product G", productG);
        WEB_ELEMENT_MAPPING.put("Select Product", selectProduct);
        WEB_ELEMENT_MAPPING.put("Select Product Illness", selectProductIllness);
        WEB_ELEMENT_MAPPING.put("Annual Limit", annualLimit);
        WEB_ELEMENT_MAPPING.put("Annual Limit G", annualLimitG);
        WEB_ELEMENT_MAPPING.put("Select Annual Limit", selectAnnualLimit);
        WEB_ELEMENT_MAPPING.put("Select Annual Limit G", selectAnnualLimitG);
        WEB_ELEMENT_MAPPING.put("Diminishing Deductible", diminishingDeductible);
        WEB_ELEMENT_MAPPING.put("Select Diminishing Deductible", selectDiminishingDeductible);
        WEB_ELEMENT_MAPPING.put("Annual Deductible", annualDeductible);
        WEB_ELEMENT_MAPPING.put("Annual Deductible G", annualDeductibleG);
        WEB_ELEMENT_MAPPING.put("Select Annual Deductible", selectAnnualDeductible);
        WEB_ELEMENT_MAPPING.put("Select Annual Deductible G", selectAnnualDeductibleG);
        WEB_ELEMENT_MAPPING.put("Coinsurance", coinsurance);
        WEB_ELEMENT_MAPPING.put("Coinsurance G", coinsuranceG);
        WEB_ELEMENT_MAPPING.put("Select Co-Insurance", selectCoInsurance);
        WEB_ELEMENT_MAPPING.put("Select Co-Insurance G", selectCoInsuranceG);
        WEB_ELEMENT_MAPPING.put("Per Incident Copay", perIncidentCopay);
        WEB_ELEMENT_MAPPING.put("Select Per Incident Copay", selectPerIncidentCopay);
        WEB_ELEMENT_MAPPING.put("Wellness", wellness);
        WEB_ELEMENT_MAPPING.put("Select Wellness", selectWellness);
        WEB_ELEMENT_MAPPING.put("Therapy", therapy);
        WEB_ELEMENT_MAPPING.put("Therapy G", therapyG);
        WEB_ELEMENT_MAPPING.put("Not Included", notIncluded);
        WEB_ELEMENT_MAPPING.put("Not Included G", notIncludedG);
        WEB_ELEMENT_MAPPING.put("Included", included);
        WEB_ELEMENT_MAPPING.put("Consultant", consultant);
        WEB_ELEMENT_MAPPING.put("Select Consultant", selectConsultant);
        WEB_ELEMENT_MAPPING.put("Consultant G", consultantG);
        WEB_ELEMENT_MAPPING.put("Select Consultant G", selectConsultantG);
        WEB_ELEMENT_MAPPING.put("Alternate Care", alternateCare);
        WEB_ELEMENT_MAPPING.put("Select Alternate Care", selectAlternateCare);
        WEB_ELEMENT_MAPPING.put("Alternative and Behavioral Care", alternateBehavioralCare);
        WEB_ELEMENT_MAPPING.put("Select Alternate Behavioral Care", selectAlternateBehavioralCare);
        WEB_ELEMENT_MAPPING.put("Final Respect", finalRespect);
        WEB_ELEMENT_MAPPING.put("Select Final Respect", selectFinalRespect);
        WEB_ELEMENT_MAPPING.put("Final Respect G", finalRespectG);
        WEB_ELEMENT_MAPPING.put("Select Final Respect G", selectFinalRespectG);
        WEB_ELEMENT_MAPPING.put("Dental", dental);
        WEB_ELEMENT_MAPPING.put("Select Dental", selectDental);
        WEB_ELEMENT_MAPPING.put("Dental G", dentalG);
        WEB_ELEMENT_MAPPING.put("Select Dental G", selectDentalG);
        WEB_ELEMENT_MAPPING.put("Assistance", assistance);
        WEB_ELEMENT_MAPPING.put("Select Assistant", selectAssistant);
        WEB_ELEMENT_MAPPING.put("Assistance G", assistanceG);
        WEB_ELEMENT_MAPPING.put("Select Assistant G", selectAssistantG);
        WEB_ELEMENT_MAPPING.put("Injuries", injuries);
        WEB_ELEMENT_MAPPING.put("Select Injuries", selectInjuries);
        WEB_ELEMENT_MAPPING.put("Injuries G", injuriesG);
        WEB_ELEMENT_MAPPING.put("Select Injuries G", selectInjuriesG);
        WEB_ELEMENT_MAPPING.put("Inherited Congenital Care", inheritedCongenitalCare);
        WEB_ELEMENT_MAPPING.put("Select Inherited Congenital Care", selectInheritedCongenitalCare);
        WEB_ELEMENT_MAPPING.put("Waiting Period Illness", waitingPeriodIllness);
        WEB_ELEMENT_MAPPING.put("Select Waiting Period Illness", selectWaitingPeriodIllness);
        WEB_ELEMENT_MAPPING.put("Existing Condition", existingCondition);
        WEB_ELEMENT_MAPPING.put("Select Existing Condition", selectExistingCondition);
        WEB_ELEMENT_MAPPING.put("Existing Condition G", existingConditionG);
        WEB_ELEMENT_MAPPING.put("Select Existing Condition G", selectExistingConditionG);
        WEB_ELEMENT_MAPPING.put("Maximum Issue Age", maximumIssueAge);
        WEB_ELEMENT_MAPPING.put("Select Maximum Issue Age", selectMaximumIssueAge);
        WEB_ELEMENT_MAPPING.put("Prior Coverage Credit", priorCoverageCredit);
        WEB_ELEMENT_MAPPING.put("Select Prior Coverage Credit", selectPriorCoverageCredit);
        WEB_ELEMENT_MAPPING.put("Weight A Value", weightAvalue);
        WEB_ELEMENT_MAPPING.put("Weight B Value", weightBvalue);
        WEB_ELEMENT_MAPPING.put("Weight C Value", weightCvalue);
        WEB_ELEMENT_MAPPING.put("Weight A Value G", weightAvalueG);
        WEB_ELEMENT_MAPPING.put("Weight B Value G", weightBvalueG);
        WEB_ELEMENT_MAPPING.put("Weight C Value G", weightCvalueG);
        WEB_ELEMENT_MAPPING.put("Add Employee", addEmployee);
        WEB_ELEMENT_MAPPING.put("Employee Census Type", employeeCensusType);
        WEB_ELEMENT_MAPPING.put("Select Manual Input", selectManualInput);
        WEB_ELEMENT_MAPPING.put("Select Group Template File Upload", selectGroupTemplateFileUpload);
        WEB_ELEMENT_MAPPING.put("Select Enrollment Upload", selectEnrollmentUpload);
        WEB_ELEMENT_MAPPING.put("Employee ID", empId);
        WEB_ELEMENT_MAPPING.put("State Add Employee", stateAddEmployee);
        WEB_ELEMENT_MAPPING.put("Zipcode Add Employee", zipcodeAddEmployee);
        WEB_ELEMENT_MAPPING.put("Office Location", officeLocation);
        WEB_ELEMENT_MAPPING.put("Date of Hire", dateOfHire);
        WEB_ELEMENT_MAPPING.put("Employee Status", employeeStatus);
        WEB_ELEMENT_MAPPING.put("Select Employee Status", selectEmployeeStatus);
        WEB_ELEMENT_MAPPING.put("Create Employee Button", createEmployeeBtn);
        WEB_ELEMENT_MAPPING.put("Enrollment Status", enrollmentStatus);
        WEB_ELEMENT_MAPPING.put("Refresh Button", refreshBtn);
        WEB_ELEMENT_MAPPING.put("File Status", fileStatus);
        WEB_ELEMENT_MAPPING.put("Add Enrollment Button", addEnrollmentBtn);
        WEB_ELEMENT_MAPPING.put("OK", okBtn);
        WEB_ELEMENT_MAPPING.put("Okay Button", okayBtn);
        WEB_ELEMENT_MAPPING.put("View Template Files", viewTemplateFiles);
        WEB_ELEMENT_MAPPING.put("View Error", viewError);
        WEB_ELEMENT_MAPPING.put("SFTP Link", sftpLink);
        WEB_ELEMENT_MAPPING.put("View Details", viewDetails);
        WEB_ELEMENT_MAPPING.put("Error Message", errorMessage);
        WEB_ELEMENT_MAPPING.put("Employee Address Line 1", emp_AddressLine1);
        WEB_ELEMENT_MAPPING.put("Employee City", emp_City);
        WEB_ELEMENT_MAPPING.put("Employee Email", emp_Email);
        WEB_ELEMENT_MAPPING.put("Employee Last Name", emp_Lname);
        WEB_ELEMENT_MAPPING.put("Employee State", emp_State);
        WEB_ELEMENT_MAPPING.put("Group Number", groupNbr);
        WEB_ELEMENT_MAPPING.put("Employee Pet Breed", emp_PetBreed);
        WEB_ELEMENT_MAPPING.put("Employee Plan Name", emp_PlanName);
        WEB_ELEMENT_MAPPING.put("Date of Issue", dateOfIssue);
        WEB_ELEMENT_MAPPING.put("Renewal Date", renewalDate);
        WEB_ELEMENT_MAPPING.put("Renewal Year Change", renewalYearChange);
        WEB_ELEMENT_MAPPING.put("Renewal Date Select", renewalDateSelect);
        WEB_ELEMENT_MAPPING.put("Select Previous Month", selectPreviousMonth);
        WEB_ELEMENT_MAPPING.put("Enrollment From Date", enrollmentFromDate);
        WEB_ELEMENT_MAPPING.put("View Group", viewGroup);
        WEB_ELEMENT_MAPPING.put("Three Dots Action Link", threeDotsActionLink);
        WEB_ELEMENT_MAPPING.put("Add Educational Material Link", addEducationalMaterialLink);
        WEB_ELEMENT_MAPPING.put("Reason Adding Pet", reasonAddingPet);
        WEB_ELEMENT_MAPPING.put("Select Reason Adding Pet", selectReasonAddingPet);
        WEB_ELEMENT_MAPPING.put("Pet Species", petSpecies);
        WEB_ELEMENT_MAPPING.put("Select Pet Species", selectPetSpecies);
        WEB_ELEMENT_MAPPING.put("Pet Name", petName);
        WEB_ELEMENT_MAPPING.put("Pet Age", petAge);
        WEB_ELEMENT_MAPPING.put("Select Pet Age", selectPetAge);
        WEB_ELEMENT_MAPPING.put("Pet Weight", petWeight);
        WEB_ELEMENT_MAPPING.put("Add Pet Button", addPetBtn);
        WEB_ELEMENT_MAPPING.put("Pet Breed", petBreed);
        WEB_ELEMENT_MAPPING.put("Select Pet Breed", selectPetBreed);
        WEB_ELEMENT_MAPPING.put("Select Pet Plan", selectPetPlan);
        WEB_ELEMENT_MAPPING.put("Reason for Late Enrollment", reasonForLateEnrollment);
        WEB_ELEMENT_MAPPING.put("Select Reason for Late Enrollment", selectReasonForLateEnrollment);
        WEB_ELEMENT_MAPPING.put("Agree MPI", agreeMPI);
        WEB_ELEMENT_MAPPING.put("Agree FW", agreeFW);
        WEB_ELEMENT_MAPPING.put("Agree AA", agreeAA);
        WEB_ELEMENT_MAPPING.put("Agree EC", agreeEC);
        WEB_ELEMENT_MAPPING.put("Run Group Enroll Job Button", runEnrollJobBtn);
        WEB_ELEMENT_MAPPING.put("Set Date Button", setDateBtn);
        WEB_ELEMENT_MAPPING.put("Enrolled Status", enrolledStatus);
        WEB_ELEMENT_MAPPING.put("Select First of Next Month", selectFirstOfNextMonth);
        WEB_ELEMENT_MAPPING.put("Select Next Month", selectNextMonth);
        WEB_ELEMENT_MAPPING.put("Select First of Next Month 2", selectFirstOfNextMonth2);
        WEB_ELEMENT_MAPPING.put("Scroll to MGA Group", scrollToMGAGroup);
        WEB_ELEMENT_MAPPING.put("Group Size", groupSize);
        WEB_ELEMENT_MAPPING.put("Edit Administrators", editAdmin);
        WEB_ELEMENT_MAPPING.put("Edit Employee", editEmployee);
        WEB_ELEMENT_MAPPING.put("Edit Admin Button", editAdminBtn);
        WEB_ELEMENT_MAPPING.put("Administrators Link", administratorsLink);
        WEB_ELEMENT_MAPPING.put("First Name Text", firstNameText);
        WEB_ELEMENT_MAPPING.put("Verify First Name", verifyFirstName);
        WEB_ELEMENT_MAPPING.put("Edit Location", editLocation);
        WEB_ELEMENT_MAPPING.put("Edit Location Link", editLocationLink);
        WEB_ELEMENT_MAPPING.put("Verify Address", verifyAddress);
        WEB_ELEMENT_MAPPING.put("Add Documents Link", addDocumentsLink);
        WEB_ELEMENT_MAPPING.put("File Name", fileName);
        WEB_ELEMENT_MAPPING.put("Document Tab", documentTab);
        WEB_ELEMENT_MAPPING.put("Enrollment Tab", enrollmentTab);
        WEB_ELEMENT_MAPPING.put("Transfer Credit To Group", transferCreditGroup);
        WEB_ELEMENT_MAPPING.put("Educational Material Tab", educationalMaterialTab);
        WEB_ELEMENT_MAPPING.put("Dummy File Text", dummyFileText);
        WEB_ELEMENT_MAPPING.put("Dummy File Video", dummyFileVideo);
        WEB_ELEMENT_MAPPING.put("Delete File", deleteFile);
        WEB_ELEMENT_MAPPING.put("Claim Link", claimLink);
        WEB_ELEMENT_MAPPING.put("Create Claim Button", createClaimBtn);
        WEB_ELEMENT_MAPPING.put("Select Group", selectGroup);
        WEB_ELEMENT_MAPPING.put("Select Employee", selectEmployee);
        WEB_ELEMENT_MAPPING.put("Select Pet", selectPet);
        WEB_ELEMENT_MAPPING.put("Is Insurance", isInsurance);
        WEB_ELEMENT_MAPPING.put("Illness Info", illnessInfo);
        WEB_ELEMENT_MAPPING.put("Calendar Button 1", calendarBtn1);
        WEB_ELEMENT_MAPPING.put("Current Month", currentMonth);
        WEB_ELEMENT_MAPPING.put("Calendar Button 2", calendarBtn2);
        WEB_ELEMENT_MAPPING.put("Calendar Button 3", calendarBtn3);
        WEB_ELEMENT_MAPPING.put("Symptom Date", symptomDate);
        WEB_ELEMENT_MAPPING.put("Treatment Date", treatmentDate);
        WEB_ELEMENT_MAPPING.put("Reimbursement Method", reimbursementMethod);
        WEB_ELEMENT_MAPPING.put("Agree", agree);
        WEB_ELEMENT_MAPPING.put("Claim Status", claimStatus);
        WEB_ELEMENT_MAPPING.put("Producers Link", producersLink);
        WEB_ELEMENT_MAPPING.put("Sub-Producers Link", subProducersLink);
        WEB_ELEMENT_MAPPING.put("Create Producer", createProducer);
        WEB_ELEMENT_MAPPING.put("Producer Code", producerCode);
        WEB_ELEMENT_MAPPING.put("Producer Type", producerType);
        WEB_ELEMENT_MAPPING.put("Select Producer Type", selectProducerType);
        WEB_ELEMENT_MAPPING.put("Producer Name", producerName);
        WEB_ELEMENT_MAPPING.put("Authorized State", authorizedState);
        WEB_ELEMENT_MAPPING.put("Authorized Provinces", authorizedProvinces);
        WEB_ELEMENT_MAPPING.put("Status", status);
        WEB_ELEMENT_MAPPING.put("Select Status", selectStatus);
        WEB_ELEMENT_MAPPING.put("Producer Address", producerAddress);
        WEB_ELEMENT_MAPPING.put("Producer City", producerCity);
        WEB_ELEMENT_MAPPING.put("Contact Name", contactName);
        WEB_ELEMENT_MAPPING.put("Contact Address", contactAdd);
        WEB_ELEMENT_MAPPING.put("Contact City", contactCity);
        WEB_ELEMENT_MAPPING.put("Contact State", contactState);
        WEB_ELEMENT_MAPPING.put("Contact Zipcode", contactZipcode);
        WEB_ELEMENT_MAPPING.put("Contact Email", contactEmail);
        WEB_ELEMENT_MAPPING.put("No Button", noBtn);
        WEB_ELEMENT_MAPPING.put("Producer Status", producerStatus);
        WEB_ELEMENT_MAPPING.put("Create Sub Producer", createSubProducer);
        WEB_ELEMENT_MAPPING.put("Sub Producer Status", subProducerStatus);
        WEB_ELEMENT_MAPPING.put("Producer Name Text", producerNameTxt);
        WEB_ELEMENT_MAPPING.put("Sub Producer Name Text", subProducerNameTxt);
        WEB_ELEMENT_MAPPING.put("Note Added Popup", noteAddedPopUp);
        WEB_ELEMENT_MAPPING.put("Notes Selection", notesSelection);
        WEB_ELEMENT_MAPPING.put("Delete Note", deleteNote);
        WEB_ELEMENT_MAPPING.put("Note Deleted Popup", noteDeletedPopUp);
        WEB_ELEMENT_MAPPING.put("Incorrect Employee ID", incorrectEmpID);
        WEB_ELEMENT_MAPPING.put("Incorrect Group ID", incorrectGroupID);
        WEB_ELEMENT_MAPPING.put("Blank Values", blankValues);
        WEB_ELEMENT_MAPPING.put("Blank Bill Date", blankBillDate);
        WEB_ELEMENT_MAPPING.put("Blank Payroll Pay Date", blankPayrollPayDate);
        WEB_ELEMENT_MAPPING.put("Negative Employee Amount Deducted", negativeEmployeeAmountDeducted);
        WEB_ELEMENT_MAPPING.put("Negative Employer Amount Contributed", negativeEmployerAmountContributed);
        WEB_ELEMENT_MAPPING.put("Credit Available", creditAvailable);
        WEB_ELEMENT_MAPPING.put("Adjustment Paid", adjustmentPaid);
        WEB_ELEMENT_MAPPING.put("Adjustment Applied", adjustmentApplied);
        WEB_ELEMENT_MAPPING.put("Verify Button", verifyButton);
        WEB_ELEMENT_MAPPING.put("Life Event Link", lifeEventLink);
        WEB_ELEMENT_MAPPING.put("Assign To", assignTo);
        WEB_ELEMENT_MAPPING.put("Assign To User", assignToUser);
        WEB_ELEMENT_MAPPING.put("Select User", selectUser);
        WEB_ELEMENT_MAPPING.put("Verify Assigned User", verifyAssignedUser);
        WEB_ELEMENT_MAPPING.put("Verify QLE Type", VerifyQleType);
        WEB_ELEMENT_MAPPING.put("Approve QLE", approveQLE);
        WEB_ELEMENT_MAPPING.put("Decline QLE", declineQLE);
        WEB_ELEMENT_MAPPING.put("Add Document QLE", addDocumentQLE);
        WEB_ELEMENT_MAPPING.put("Decline Reason QLE", declineReasonQLE);
        WEB_ELEMENT_MAPPING.put("Select Decline Reason QLE", selectDeclineReasonQLE);
        WEB_ELEMENT_MAPPING.put("Verify Approved QLE", verifyApprovedQLE);
        WEB_ELEMENT_MAPPING.put("Verify Declined QLE", verifyDeclinedQLE);
        WEB_ELEMENT_MAPPING.put("Unassign User", unassignUser);
        WEB_ELEMENT_MAPPING.put("Verify Unassign User", verifyUnAssignUser);
        WEB_ELEMENT_MAPPING.put("Enrollment Link", enrollmentLink);
        WEB_ELEMENT_MAPPING.put("Pet Species QLE", petSpeciesQLE);
        WEB_ELEMENT_MAPPING.put("Reason For Adding Pet", reasonForAddingPet);
        WEB_ELEMENT_MAPPING.put("Pet Age QLE", petAgeQLE);
        WEB_ELEMENT_MAPPING.put("Pet Weight QLE", petWeightQLE);
        WEB_ELEMENT_MAPPING.put("Pet Breed QLE", petBreedQLE);
        WEB_ELEMENT_MAPPING.put("Calculate Premium", calculatePremium);
        WEB_ELEMENT_MAPPING.put("Inactive Pet Info Link", inactivePetInfoLink);
        WEB_ELEMENT_MAPPING.put("Inactive Pet Name", inactivePetName);
        WEB_ELEMENT_MAPPING.put("No Result", noResult);
        WEB_ELEMENT_MAPPING.put("Pet Information Link", petInformationLink);
        WEB_ELEMENT_MAPPING.put("Remove Pet", removePet);
        WEB_ELEMENT_MAPPING.put("Edit Commission Link", editCommissionLink);
        WEB_ELEMENT_MAPPING.put("Edit Commission Button", editCommissionBtn);
        WEB_ELEMENT_MAPPING.put("First Month", firstMonth);
        WEB_ELEMENT_MAPPING.put("Remove Commission", removeCommission);
        WEB_ELEMENT_MAPPING.put("No Commission Text", noCommissionTxt);
        WEB_ELEMENT_MAPPING.put("Terminate Employee Button", terminateEmpBtn);
        WEB_ELEMENT_MAPPING.put("Delete Employee Button", deleteEmpBtn);
        WEB_ELEMENT_MAPPING.put("Termination Type", terminationType);
        WEB_ELEMENT_MAPPING.put("Select Termination Type", selectTerminationType);
        WEB_ELEMENT_MAPPING.put("Submit Button 1", submitBtn1);
        WEB_ELEMENT_MAPPING.put("Add Document Button", addDocumentBtn);
        WEB_ELEMENT_MAPPING.put("Bill Date", billDate);
        WEB_ELEMENT_MAPPING.put("Billing Calendar Tab", billingCalendarTab);
        WEB_ELEMENT_MAPPING.put("Run Employee Payment Job", runEmploymentPaymentJob);
        WEB_ELEMENT_MAPPING.put("Run Group Payment Job", runGroupPaymentJob);
        WEB_ELEMENT_MAPPING.put("Generate Bill", generateBill);
        WEB_ELEMENT_MAPPING.put("Upload Remittance", uploadRemittance);
        WEB_ELEMENT_MAPPING.put("Delete Group", deleteGroup);
        WEB_ELEMENT_MAPPING.put("Remove All Employees", removeAllEmployees);
        WEB_ELEMENT_MAPPING.put("Add Notes", addNote);
        WEB_ELEMENT_MAPPING.put("Delete Confirm Button", deleteConfirmBtn);
        WEB_ELEMENT_MAPPING.put("Delete Confirm Message", deleteConfirmMsg);
        WEB_ELEMENT_MAPPING.put("Remove Employees Message", removeEmpMsg);
        WEB_ELEMENT_MAPPING.put("Delete Employee Message", deleteEmpMsg);
        WEB_ELEMENT_MAPPING.put("Remove Pet Button", removePetbtn);
        WEB_ELEMENT_MAPPING.put("Payment Type", paymentType);
        WEB_ELEMENT_MAPPING.put("Billing Reports", billingReports);
        WEB_ELEMENT_MAPPING.put("Remittance Type", remittanceType);
        WEB_ELEMENT_MAPPING.put("Reopen Button", reopenBtn);
        WEB_ELEMENT_MAPPING.put("Reopen Request Type", reopenRequestType);
        WEB_ELEMENT_MAPPING.put("Select Reopen Request Type", selectReopenRequestType);
        WEB_ELEMENT_MAPPING.put("Request Status", requestStatus);
        WEB_ELEMENT_MAPPING.put("Calendar Month Change 2", calendarMonthChange2);
        WEB_ELEMENT_MAPPING.put("Select Termination Date", selectTerminationDate);
        WEB_ELEMENT_MAPPING.put("Payroll Date", payrollDate);
        WEB_ELEMENT_MAPPING.put("Actual Payroll Date", actualPayrollDate);
        WEB_ELEMENT_MAPPING.put("Calendar Month Text", calendarMonthTxt);
        WEB_ELEMENT_MAPPING.put("Payroll Deduction Type", payrollDeductionType);
        WEB_ELEMENT_MAPPING.put("Download Payroll Bill", downloadPayrollBill);
        WEB_ELEMENT_MAPPING.put("Payment Reconciliation", paymentReconcillation);
        WEB_ELEMENT_MAPPING.put("Month Year", monthYear);
        WEB_ELEMENT_MAPPING.put("Run Pet Cash Premium Report Job", petCashPremiumBtn);
        WEB_ELEMENT_MAPPING.put("Run Commission Job", runCommissionBtn);
        WEB_ELEMENT_MAPPING.put("Run Aging Report Job", runAgingBtn);
        WEB_ELEMENT_MAPPING.put("Create Renewal Link", createRenewalLink);
        WEB_ELEMENT_MAPPING.put("Renewal Type", renewalType);
        WEB_ELEMENT_MAPPING.put("Renewal Enroll From Year", renewalEnrollFromYear);
        WEB_ELEMENT_MAPPING.put("Renewal Enroll To Year", renewalEnrollToYear);
        WEB_ELEMENT_MAPPING.put("Renewal Calendar Button From", RenewalcalendarBtnFrom);
        WEB_ELEMENT_MAPPING.put("Renewal Calendar Button To", RenewalcalendarBtnTo);
        WEB_ELEMENT_MAPPING.put("Renewal Enroll From First Date", renewalEnrollFromFirstDate);
        WEB_ELEMENT_MAPPING.put("Renewal Enroll First Date", renewalEnrollFirstDate);
        WEB_ELEMENT_MAPPING.put("Renewal Status", renewalStatus);
        WEB_ELEMENT_MAPPING.put("Silver Plan Details", silverPlanDetails);
        WEB_ELEMENT_MAPPING.put("Master Policy End Date", masterPolicyDate);
        WEB_ELEMENT_MAPPING.put("Group Color", groupColor);
        WEB_ELEMENT_MAPPING.put("Group Settings Link", groupSettingLink);
        WEB_ELEMENT_MAPPING.put("Add Credit", addCredit);
        WEB_ELEMENT_MAPPING.put("Refund Group Credit", refundCredit);
        WEB_ELEMENT_MAPPING.put("Notifications Link", notificationLink);
        WEB_ELEMENT_MAPPING.put("Do Not Send Email", doNotSendEmail);
        WEB_ELEMENT_MAPPING.put("Save Button", saveBtn);
        WEB_ELEMENT_MAPPING.put("Save Button 2", saveBtn2);
        WEB_ELEMENT_MAPPING.put("Renewal Notification", renewalNotification);
        WEB_ELEMENT_MAPPING.put("Enrollment Notification", enrollmentNotification);
        WEB_ELEMENT_MAPPING.put("Notification Updated Success", notificationUpdatedSuccess);
        WEB_ELEMENT_MAPPING.put("Renewal Notification Date", renewalNotificationDate);
        WEB_ELEMENT_MAPPING.put("Cancel Renewal", cancelRenewal);
        WEB_ELEMENT_MAPPING.put("Renewal Version ID", renewalVersionId);
        WEB_ELEMENT_MAPPING.put("Renewal Policy Dropdown", renewalPolicyDropdown);
        WEB_ELEMENT_MAPPING.put("Select Renewal Policy", selectRenewalPolicy);
        WEB_ELEMENT_MAPPING.put("Run Group Renewal Activation Job", runRenewalActivationJob);
        WEB_ELEMENT_MAPPING.put("Terminate Group", terminateGroup);
        WEB_ELEMENT_MAPPING.put("Termination Date", terminationDate);
        WEB_ELEMENT_MAPPING.put("Group Status", groupStatus);
        WEB_ELEMENT_MAPPING.put("Master Policy Effective Date", masterPolicyEffectiveDate);
        WEB_ELEMENT_MAPPING.put("Enter Terminate Date", enterTerminateDate);
        WEB_ELEMENT_MAPPING.put("Get Terminate Date", getTerminateDate);
        WEB_ELEMENT_MAPPING.put("Run Group Termination Job", runGroupTerminate);
        WEB_ELEMENT_MAPPING.put("Clear Date", clearDate);
        WEB_ELEMENT_MAPPING.put("Verify Employee ID", verifyEmpId);
        WEB_ELEMENT_MAPPING.put("Renewal Enrollment Start Date", renewalEnrollmentStartDate);
        WEB_ELEMENT_MAPPING.put("Verify Employee Status", verifyEmpStatus);
        WEB_ELEMENT_MAPPING.put("Email ID Validation", emailIdValidation);
        WEB_ELEMENT_MAPPING.put("Verify Update Status", verifyUpdateStatus);
        WEB_ELEMENT_MAPPING.put("Group View Detail", groupViewDetail);
        WEB_ELEMENT_MAPPING.put("Run Employee Dependent Migration Job", runEmpMigrationJob);
        WEB_ELEMENT_MAPPING.put("Renewal Policy Button", renewalPolicyBtn);
        WEB_ELEMENT_MAPPING.put("Select Renewal Pet Plan", selectRenewalPetPlan);
        WEB_ELEMENT_MAPPING.put("Run Decline QLE By Group Job", runDeclineQleJob);
        WEB_ELEMENT_MAPPING.put("QLE Request Status", qleRequestStatus);
        WEB_ELEMENT_MAPPING.put("Altreg", altreg);
        WEB_ELEMENT_MAPPING.put("Registration Error", regError);
        WEB_ELEMENT_MAPPING.put("Add Pet To Active Policy", addPetToActivePolicy);
        WEB_ELEMENT_MAPPING.put("Payroll End Date", payrollEndDate);
        WEB_ELEMENT_MAPPING.put("Next Active Date", nextActiveDate);
        WEB_ELEMENT_MAPPING.put("Run Group Policy Expiration Job", runGroupExpiryJob);
        WEB_ELEMENT_MAPPING.put("Retro Termination Date", retroTerminationDate);
        WEB_ELEMENT_MAPPING.put("Terminate Date Input Month", terminateDateInputMonth);
        WEB_ELEMENT_MAPPING.put("Terminate Date Input Day", terminateDateInputDay);
        WEB_ELEMENT_MAPPING.put("Terminate Date Input Year", terminateDateInputyear);
        WEB_ELEMENT_MAPPING.put("Add Credit Amount", addCreditAmount);
        WEB_ELEMENT_MAPPING.put("Unapplied Funds", unappliedFunds);
        WEB_ELEMENT_MAPPING.put("Outstanding Balance", outstandingBalance);
        WEB_ELEMENT_MAPPING.put("Add Note Categories", addNoteCategories);
        WEB_ELEMENT_MAPPING.put("Add Note Payroll Cycle", addNotePayrollCycle);
        WEB_ELEMENT_MAPPING.put("Add Note Comment", addNoteComment);
        WEB_ELEMENT_MAPPING.put("Admin Benbroker Changes", adminBenbrokerChanges);
        WEB_ELEMENT_MAPPING.put("Select Payroll Cycle", selectPayrollCycle);
        WEB_ELEMENT_MAPPING.put("Edit Admin Info",  editAdminInfo);
        WEB_ELEMENT_MAPPING.put("Day Input", dayInput);
        WEB_ELEMENT_MAPPING.put("Year Input", yearInput);
        WEB_ELEMENT_MAPPING.put("Month Input", monthInput);
        WEB_ELEMENT_MAPPING.put("Billing Link", billingLink);
        WEB_ELEMENT_MAPPING.put("Group Aging Report", groupAgingReport);
        WEB_ELEMENT_MAPPING.put("Billing Calendar", billingCalendarTab);
        WEB_ELEMENT_MAPPING.put("Remit Button", remitBtn);
        WEB_ELEMENT_MAPPING.put("Payment Type Input", paymentType);
        WEB_ELEMENT_MAPPING.put("Remittance Method Type Input", remittanceMethodType);
        WEB_ELEMENT_MAPPING.put("Auto Remittance Option", autoRemittance);
        WEB_ELEMENT_MAPPING.put("Upload Remittance File Option", uploadRemittanceFile);
        WEB_ELEMENT_MAPPING.put("Done Button", done);
        WEB_ELEMENT_MAPPING.put("Confirm", confirm);
        WEB_ELEMENT_MAPPING.put("Accounts Dashboard", accountsDashboard);
        WEB_ELEMENT_MAPPING.put("Confirm Amount Input", confirmAmount);
        WEB_ELEMENT_MAPPING.put("Add Button", add);
        WEB_ELEMENT_MAPPING.put("Download", download);
        WEB_ELEMENT_MAPPING.put("File Upload", browser);
        WEB_ELEMENT_MAPPING.put("Actions Button", actionsButton);
        WEB_ELEMENT_MAPPING.put("Change Employee Plan", changeEmployeePlan);
        WEB_ELEMENT_MAPPING.put("Refresh Data", refreshData);
        WEB_ELEMENT_MAPPING.put("Export Enrollment Report", exportEnrollmentReport);
        WEB_ELEMENT_MAPPING.put("Select Report Type", selectReportType);
        WEB_ELEMENT_MAPPING.put("Report Exported", reportExported);
        WEB_ELEMENT_MAPPING.put("Yes Button", yesBtn);
        WEB_ELEMENT_MAPPING.put("Megha Dhotarkar", nameTxt);
        WEB_ELEMENT_MAPPING.put("Select Mid Date Of Month", selectMidDateOfMonth);
        WEB_ELEMENT_MAPPING.put("Create User", creatUser);
        WEB_ELEMENT_MAPPING.put("Enroll in Ben Period 1", component1);
        WEB_ELEMENT_MAPPING.put("Enroll in Ben Period 2", component11);
        WEB_ELEMENT_MAPPING.put("Renew Coverage", component2);
        WEB_ELEMENT_MAPPING.put("Your current coverage will end on", component3);
        WEB_ELEMENT_MAPPING.put("Enroll in Benefit Period 01/01/2026 - 01/01/2027", component4);
        WEB_ELEMENT_MAPPING.put("Add more pets to your coverage!", component5);
        WEB_ELEMENT_MAPPING.put("ADD MORE PETS TO YOUR CURRENT COVERAGE!", component15);
        WEB_ELEMENT_MAPPING.put("File a Claim", component6);
        WEB_ELEMENT_MAPPING.put("Update Coverage", component7);
        WEB_ELEMENT_MAPPING.put("Renew Policy", component8);
        WEB_ELEMENT_MAPPING.put("COMPLETE YOUR PET REGISTRATION NOW!", component9);
        WEB_ELEMENT_MAPPING.put("Total number of notes", totalNumberOfNotes);

    }

    @Override
    public Map<String, WebElement> elements() {
        return WEB_ELEMENT_MAPPING;
    }

    @Override
    public String name() {
        return "Groups Dashboard";
    }

    @Override
    public Map<String, List<WebElement>> elementsGroup() {
        // TODO Auto-generated method stub
        return null;
    }

}
